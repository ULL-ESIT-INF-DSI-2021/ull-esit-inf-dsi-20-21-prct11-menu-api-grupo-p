{"version":3,"file":"/home/usuario/dsi/practica6/src/ejercicio-2/temperatura.ts","sources":["/home/usuario/dsi/practica6/src/ejercicio-2/temperatura.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,WAAW;IACxB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;;OAIG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;;OAIG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,QAAQ,EAAE;YACxC,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,QAAQ;gBACvC,SAAS,GAAG,KAAK,GAAG,GAAG,EAAC,EAAE,CAAC;SAC9B;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,QAAQ,EAAE;YAC7C,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,QAAQ;gBACvC,SAAS,GAAG,KAAK,GAAG,GAAG,EAAC,EAAE,CAAC;SAC9B;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA/CD,kCA+CC;AAED,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAClD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;AAE5E,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAClD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC,CAAC","sourcesContent":["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Temperatura.__\n */\nexport class Temperatura implements isConvertible<number> {\n/**\n * Constructor de la clase Temperatura.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este método se encarga de dar acceso al valor del atributo primerSistema \n * aunque se acceda desde fuera de la clase Temperatura.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este método se encarga de dar acceso al valor del atributo segundoSistema \n * aunque se acceda desde fuera de la clase Temperatura.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este método hace la conversión entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"Grados\") {\n      if (this.getSegundoSistema() === \"Kelvin\")\n        resultado = valor + 273,15;\n    }\n    else if (this.getPrimerSistema() === \"Kelvin\") {\n      if (this.getSegundoSistema() === \"Grados\")\n        resultado = valor - 273,15;\n    }\n    else\n      throw new Error(\"Los sistemas no son válidos.\");\n    return resultado;\n  }\n}\n\nconst temp1 = new Temperatura(\"Grados\", \"Kelvin\");\nconsole.log(\"\\n20 grados Celsius son \" + temp1.conversor(20) + \" Kelvins.\");\n\nconst temp2 = new Temperatura(\"Kelvin\", \"Grados\");\nconsole.log(\"300 Kelvins son \" + temp2.conversor(300) + \" grados Celsius.\\n\");"]}
"use strict";function cov_22e4urin4q(){var path="/home/usuario/dsi/practica6/src/ejercicio-2/temperatura.ts";var hash="c671dccc670ea5ec470800fc3697fe66e2356f74";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/dsi/practica6/src/ejercicio-2/temperatura.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:29}},"2":{start:{line:14,column:8},end:{line:14,column:43}},"3":{start:{line:15,column:8},end:{line:15,column:45}},"4":{start:{line:23,column:8},end:{line:23,column:34}},"5":{start:{line:31,column:8},end:{line:31,column:35}},"6":{start:{line:39,column:24},end:{line:39,column:25}},"7":{start:{line:40,column:8},end:{line:49,column:60}},"8":{start:{line:41,column:12},end:{line:42,column:44}},"9":{start:{line:42,column:16},end:{line:42,column:44}},"10":{start:{line:44,column:13},end:{line:49,column:60}},"11":{start:{line:45,column:12},end:{line:46,column:44}},"12":{start:{line:46,column:16},end:{line:46,column:44}},"13":{start:{line:49,column:12},end:{line:49,column:60}},"14":{start:{line:50,column:8},end:{line:50,column:25}},"15":{start:{line:53,column:0},end:{line:53,column:34}},"16":{start:{line:54,column:14},end:{line:54,column:49}},"17":{start:{line:55,column:0},end:{line:55,column:76}},"18":{start:{line:56,column:14},end:{line:56,column:49}},"19":{start:{line:57,column:0},end:{line:57,column:78}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:47},end:{line:16,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:22,column:23},end:{line:24,column:5}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:24},end:{line:32,column:5}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:21},end:{line:51,column:5}},line:38}},branchMap:{"0":{loc:{start:{line:40,column:8},end:{line:49,column:60}},type:"if",locations:[{start:{line:40,column:8},end:{line:49,column:60}},{start:{line:40,column:8},end:{line:49,column:60}}],line:40},"1":{loc:{start:{line:41,column:12},end:{line:42,column:44}},type:"if",locations:[{start:{line:41,column:12},end:{line:42,column:44}},{start:{line:41,column:12},end:{line:42,column:44}}],line:41},"2":{loc:{start:{line:44,column:13},end:{line:49,column:60}},type:"if",locations:[{start:{line:44,column:13},end:{line:49,column:60}},{start:{line:44,column:13},end:{line:49,column:60}}],line:44},"3":{loc:{start:{line:45,column:12},end:{line:46,column:44}},type:"if",locations:[{start:{line:45,column:12},end:{line:46,column:44}},{start:{line:45,column:12},end:{line:46,column:44}}],line:45}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/dsi/practica6/src/ejercicio-2/temperatura.ts",sources:["/home/usuario/dsi/practica6/src/ejercicio-2/temperatura.ts"],names:[],mappings:";;;AAEA;;GAEG;AACH,MAAa,WAAW;IACxB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;;OAIG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;;OAIG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,QAAQ,EAAE;YACxC,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,QAAQ;gBACvC,SAAS,GAAG,KAAK,GAAG,GAAG,EAAC,EAAE,CAAC;SAC9B;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,QAAQ,EAAE;YAC7C,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,QAAQ;gBACvC,SAAS,GAAG,KAAK,GAAG,GAAG,EAAC,EAAE,CAAC;SAC9B;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA/CD,kCA+CC;AAED,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAClD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;AAE5E,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAClD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC,CAAC",sourcesContent:["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Temperatura.__\n */\nexport class Temperatura implements isConvertible<number> {\n/**\n * Constructor de la clase Temperatura.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este m\xE9todo se encarga de dar acceso al valor del atributo primerSistema \n * aunque se acceda desde fuera de la clase Temperatura.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este m\xE9todo se encarga de dar acceso al valor del atributo segundoSistema \n * aunque se acceda desde fuera de la clase Temperatura.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este m\xE9todo hace la conversi\xF3n entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"Grados\") {\n      if (this.getSegundoSistema() === \"Kelvin\")\n        resultado = valor + 273,15;\n    }\n    else if (this.getPrimerSistema() === \"Kelvin\") {\n      if (this.getSegundoSistema() === \"Grados\")\n        resultado = valor - 273,15;\n    }\n    else\n      throw new Error(\"Los sistemas no son v\xE1lidos.\");\n    return resultado;\n  }\n}\n\nconst temp1 = new Temperatura(\"Grados\", \"Kelvin\");\nconsole.log(\"\\n20 grados Celsius son \" + temp1.conversor(20) + \" Kelvins.\");\n\nconst temp2 = new Temperatura(\"Kelvin\", \"Grados\");\nconsole.log(\"300 Kelvins son \" + temp2.conversor(300) + \" grados Celsius.\\n\");"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c671dccc670ea5ec470800fc3697fe66e2356f74"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22e4urin4q=function(){return actualCoverage;};}return actualCoverage;}cov_22e4urin4q();cov_22e4urin4q().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_22e4urin4q().s[1]++;exports.Temperatura=void 0;/**
 * __Esta es la clase Temperatura.__
 */class Temperatura{/**
     * Constructor de la clase Temperatura.
     * @param primerSistema Nombre del primer sistema.
     * @param segundoSistema Nombre del segundo sistema.
     */constructor(primerSistema,segundoSistema){cov_22e4urin4q().f[0]++;cov_22e4urin4q().s[2]++;this.primerSistema=primerSistema;cov_22e4urin4q().s[3]++;this.segundoSistema=segundoSistema;}/**
     * Este método se encarga de dar acceso al valor del atributo primerSistema
     * aunque se acceda desde fuera de la clase Temperatura.
     * @return Devuelve el nombre del primerSistema.
     */getPrimerSistema(){cov_22e4urin4q().f[1]++;cov_22e4urin4q().s[4]++;return this.primerSistema;}/**
     * Este método se encarga de dar acceso al valor del atributo segundoSistema
     * aunque se acceda desde fuera de la clase Temperatura.
     * @return Devuelve el nombre del segundoSistema.
     */getSegundoSistema(){cov_22e4urin4q().f[2]++;cov_22e4urin4q().s[5]++;return this.segundoSistema;}/**
     * Este método hace la conversión entre dos sistemas de unidades diferentes
     * @param valor El valor que tiene el sistema 1.
     * @return Devuelve el valor que tiene el sistema 2.
     */conversor(valor){cov_22e4urin4q().f[3]++;let resultado=(cov_22e4urin4q().s[6]++,0);cov_22e4urin4q().s[7]++;if(this.getPrimerSistema()==="Grados"){cov_22e4urin4q().b[0][0]++;cov_22e4urin4q().s[8]++;if(this.getSegundoSistema()==="Kelvin"){cov_22e4urin4q().b[1][0]++;cov_22e4urin4q().s[9]++;resultado=valor+273,15;}else{cov_22e4urin4q().b[1][1]++;}}else{cov_22e4urin4q().b[0][1]++;cov_22e4urin4q().s[10]++;if(this.getPrimerSistema()==="Kelvin"){cov_22e4urin4q().b[2][0]++;cov_22e4urin4q().s[11]++;if(this.getSegundoSistema()==="Grados"){cov_22e4urin4q().b[3][0]++;cov_22e4urin4q().s[12]++;resultado=valor-273,15;}else{cov_22e4urin4q().b[3][1]++;}}else{cov_22e4urin4q().b[2][1]++;cov_22e4urin4q().s[13]++;throw new Error("Los sistemas no son válidos.");}}cov_22e4urin4q().s[14]++;return resultado;}}cov_22e4urin4q().s[15]++;exports.Temperatura=Temperatura;const temp1=(cov_22e4urin4q().s[16]++,new Temperatura("Grados","Kelvin"));cov_22e4urin4q().s[17]++;console.log("\n20 grados Celsius son "+temp1.conversor(20)+" Kelvins.");const temp2=(cov_22e4urin4q().s[18]++,new Temperatura("Kelvin","Grados"));cov_22e4urin4q().s[19]++;console.log("300 Kelvins son "+temp2.conversor(300)+" grados Celsius.\n");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9kc2kvcHJhY3RpY2E2L3NyYy9lamVyY2ljaW8tMi90ZW1wZXJhdHVyYS50cyIsInNvdXJjZXMiOlsiL2hvbWUvdXN1YXJpby9kc2kvcHJhY3RpY2E2L3NyYy9lamVyY2ljaW8tMi90ZW1wZXJhdHVyYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQTs7R0FFRztBQUNILE1BQWEsV0FBVztJQUN4Qjs7OztPQUlHO0lBQ0QsWUFBb0IsYUFBcUIsRUFBVSxjQUFzQjtRQUFyRCxrQkFBYSxHQUFiLGFBQWEsQ0FBUTtRQUFVLG1CQUFjLEdBQWQsY0FBYyxDQUFRO0lBQUcsQ0FBQztJQUUvRTs7OztPQUlHO0lBQ0QsZ0JBQWdCO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFFSDs7OztPQUlHO0lBQ0QsaUJBQWlCO1FBQ2YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFSDs7OztPQUlHO0lBQ0QsU0FBUyxDQUFDLEtBQWE7UUFFckIsSUFBSSxTQUFTLEdBQVcsQ0FBQyxDQUFDO1FBRTFCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFLEtBQUssUUFBUSxFQUFFO1lBQ3hDLElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFLEtBQUssUUFBUTtnQkFDdkMsU0FBUyxHQUFHLEtBQUssR0FBRyxHQUFHLEVBQUMsRUFBRSxDQUFDO1NBQzlCO2FBQ0ksSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxRQUFRLEVBQUU7WUFDN0MsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxRQUFRO2dCQUN2QyxTQUFTLEdBQUcsS0FBSyxHQUFHLEdBQUcsRUFBQyxFQUFFLENBQUM7U0FDOUI7O1lBRUMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1FBQ2xELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQS9DRCxrQ0ErQ0M7QUFFRCxNQUFNLEtBQUssR0FBRyxJQUFJLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDbEQsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDO0FBRTVFLE1BQU0sS0FBSyxHQUFHLElBQUksV0FBVyxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsb0JBQW9CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQ29udmVydGlibGUgfSBmcm9tICcuL2lzQ29udmVydGlibGUnO1xuXG4vKipcbiAqIF9fRXN0YSBlcyBsYSBjbGFzZSBUZW1wZXJhdHVyYS5fX1xuICovXG5leHBvcnQgY2xhc3MgVGVtcGVyYXR1cmEgaW1wbGVtZW50cyBpc0NvbnZlcnRpYmxlPG51bWJlcj4ge1xuLyoqXG4gKiBDb25zdHJ1Y3RvciBkZSBsYSBjbGFzZSBUZW1wZXJhdHVyYS5cbiAqIEBwYXJhbSBwcmltZXJTaXN0ZW1hIE5vbWJyZSBkZWwgcHJpbWVyIHNpc3RlbWEuXG4gKiBAcGFyYW0gc2VndW5kb1Npc3RlbWEgTm9tYnJlIGRlbCBzZWd1bmRvIHNpc3RlbWEuXG4gKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcmltZXJTaXN0ZW1hOiBzdHJpbmcsIHByaXZhdGUgc2VndW5kb1Npc3RlbWE6IHN0cmluZykge31cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gc2UgZW5jYXJnYSBkZSBkYXIgYWNjZXNvIGFsIHZhbG9yIGRlbCBhdHJpYnV0byBwcmltZXJTaXN0ZW1hIFxuICogYXVucXVlIHNlIGFjY2VkYSBkZXNkZSBmdWVyYSBkZSBsYSBjbGFzZSBUZW1wZXJhdHVyYS5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgbm9tYnJlIGRlbCBwcmltZXJTaXN0ZW1hLlxuICovXG4gIGdldFByaW1lclNpc3RlbWEoKSB7XG4gICAgcmV0dXJuIHRoaXMucHJpbWVyU2lzdGVtYTtcbiAgfVxuXG4vKipcbiAqIEVzdGUgbcOpdG9kbyBzZSBlbmNhcmdhIGRlIGRhciBhY2Nlc28gYWwgdmFsb3IgZGVsIGF0cmlidXRvIHNlZ3VuZG9TaXN0ZW1hIFxuICogYXVucXVlIHNlIGFjY2VkYSBkZXNkZSBmdWVyYSBkZSBsYSBjbGFzZSBUZW1wZXJhdHVyYS5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgbm9tYnJlIGRlbCBzZWd1bmRvU2lzdGVtYS5cbiAqL1xuICBnZXRTZWd1bmRvU2lzdGVtYSgpIHtcbiAgICByZXR1cm4gdGhpcy5zZWd1bmRvU2lzdGVtYTtcbiAgfVxuXG4vKipcbiAqIEVzdGUgbcOpdG9kbyBoYWNlIGxhIGNvbnZlcnNpw7NuIGVudHJlIGRvcyBzaXN0ZW1hcyBkZSB1bmlkYWRlcyBkaWZlcmVudGVzXG4gKiBAcGFyYW0gdmFsb3IgRWwgdmFsb3IgcXVlIHRpZW5lIGVsIHNpc3RlbWEgMS5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgdmFsb3IgcXVlIHRpZW5lIGVsIHNpc3RlbWEgMi5cbiAqL1xuICBjb252ZXJzb3IodmFsb3I6IG51bWJlcik6IG51bWJlciB7XG5cbiAgICBsZXQgcmVzdWx0YWRvOiBudW1iZXIgPSAwO1xuXG4gICAgaWYgKHRoaXMuZ2V0UHJpbWVyU2lzdGVtYSgpID09PSBcIkdyYWRvc1wiKSB7XG4gICAgICBpZiAodGhpcy5nZXRTZWd1bmRvU2lzdGVtYSgpID09PSBcIktlbHZpblwiKVxuICAgICAgICByZXN1bHRhZG8gPSB2YWxvciArIDI3MywxNTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5nZXRQcmltZXJTaXN0ZW1hKCkgPT09IFwiS2VsdmluXCIpIHtcbiAgICAgIGlmICh0aGlzLmdldFNlZ3VuZG9TaXN0ZW1hKCkgPT09IFwiR3JhZG9zXCIpXG4gICAgICAgIHJlc3VsdGFkbyA9IHZhbG9yIC0gMjczLDE1O1xuICAgIH1cbiAgICBlbHNlXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb3Mgc2lzdGVtYXMgbm8gc29uIHbDoWxpZG9zLlwiKTtcbiAgICByZXR1cm4gcmVzdWx0YWRvO1xuICB9XG59XG5cbmNvbnN0IHRlbXAxID0gbmV3IFRlbXBlcmF0dXJhKFwiR3JhZG9zXCIsIFwiS2VsdmluXCIpO1xuY29uc29sZS5sb2coXCJcXG4yMCBncmFkb3MgQ2Vsc2l1cyBzb24gXCIgKyB0ZW1wMS5jb252ZXJzb3IoMjApICsgXCIgS2Vsdmlucy5cIik7XG5cbmNvbnN0IHRlbXAyID0gbmV3IFRlbXBlcmF0dXJhKFwiS2VsdmluXCIsIFwiR3JhZG9zXCIpO1xuY29uc29sZS5sb2coXCIzMDAgS2VsdmlucyBzb24gXCIgKyB0ZW1wMi5jb252ZXJzb3IoMzAwKSArIFwiIGdyYWRvcyBDZWxzaXVzLlxcblwiKTsiXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vZHNpL3ByYWN0aWNhNi9zcmMvZWplcmNpY2lvLTIvdGVtcGVyYXR1cmEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Imt2TUFXK0U7K05BVC9FOztBQUVHLEdBQ0gsS0FBYSxDQUFBLFdBQVcsQ0FDeEI7Ozs7QUFJRyxPQUNELFdBQUEsQ0FBb0IsYUFBcEIsQ0FBbUQsY0FBbkQsQ0FBeUUsaURBQXJELEtBQUEsYUFBQSxDQUFBLGFBQUEsQ0FBcUQsd0JBQXRCLEtBQUEsY0FBQSxDQUFBLGNBQUEsQ0FBMEIsQ0FFL0U7Ozs7QUFJRyxPQUNELGdCQUFnQixFQUFBLGlEQUNkLE1BQU8sTUFBSyxhQUFaLENBQ0QsQ0FFSDs7OztBQUlHLE9BQ0QsaUJBQWlCLEVBQUEsaURBQ2YsTUFBTyxNQUFLLGNBQVosQ0FDRCxDQUVIOzs7O0FBSUcsT0FDRCxTQUFTLENBQUMsS0FBRCxDQUFjLHlCQUVyQixHQUFJLENBQUEsU0FBUywwQkFBVyxDQUFYLENBQWIsQ0FGcUIsd0JBSXJCLEdBQUksS0FBSyxnQkFBTCxLQUE0QixRQUFoQyxDQUEwQyxvREFDeEMsR0FBSSxLQUFLLGlCQUFMLEtBQTZCLFFBQWpDLENBQ0Usb0RBQUEsU0FBUyxDQUFHLEtBQUssQ0FBRyxHQUFwQixDQUF3QixFQUF4QixDQUEyQixDQUQ3QixpQ0FFRCxDQUhELElBSUssd0RBQUksS0FBSyxnQkFBTCxLQUE0QixRQUFoQyxDQUEwQyxxREFDN0MsR0FBSSxLQUFLLGlCQUFMLEtBQTZCLFFBQWpDLENBQ0UscURBQUEsU0FBUyxDQUFHLEtBQUssQ0FBRyxHQUFwQixDQUF3QixFQUF4QixDQUEyQixDQUQ3QixpQ0FFRCxDQUhJLElBS0gsMERBQU0sSUFBSSxDQUFBLEtBQUosQ0FBVSw4QkFBVixDQUFOLENBQWdELEVBYjdCLHlCQWNyQixNQUFPLENBQUEsU0FBUCxDQUNELENBOUNxQixDLHlCQUF4QixPQUFBLENBQUEsV0FBQSxDQUFBLFdBQUEsQ0FpREEsS0FBTSxDQUFBLEtBQUssMkJBQUcsR0FBSSxDQUFBLFdBQUosQ0FBZ0IsUUFBaEIsQ0FBMEIsUUFBMUIsQ0FBSCxDQUFYLEMseUJBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSwyQkFBNkIsS0FBSyxDQUFDLFNBQU4sQ0FBZ0IsRUFBaEIsQ0FBN0IsQ0FBbUQsV0FBL0QsRUFFQSxLQUFNLENBQUEsS0FBSywyQkFBRyxHQUFJLENBQUEsV0FBSixDQUFnQixRQUFoQixDQUEwQixRQUExQixDQUFILENBQVgsQyx5QkFDQSxPQUFPLENBQUMsR0FBUixDQUFZLG1CQUFxQixLQUFLLENBQUMsU0FBTixDQUFnQixHQUFoQixDQUFyQixDQUE0QyxvQkFBeEQsRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQ29udmVydGlibGUgfSBmcm9tICcuL2lzQ29udmVydGlibGUnO1xuXG4vKipcbiAqIF9fRXN0YSBlcyBsYSBjbGFzZSBUZW1wZXJhdHVyYS5fX1xuICovXG5leHBvcnQgY2xhc3MgVGVtcGVyYXR1cmEgaW1wbGVtZW50cyBpc0NvbnZlcnRpYmxlPG51bWJlcj4ge1xuLyoqXG4gKiBDb25zdHJ1Y3RvciBkZSBsYSBjbGFzZSBUZW1wZXJhdHVyYS5cbiAqIEBwYXJhbSBwcmltZXJTaXN0ZW1hIE5vbWJyZSBkZWwgcHJpbWVyIHNpc3RlbWEuXG4gKiBAcGFyYW0gc2VndW5kb1Npc3RlbWEgTm9tYnJlIGRlbCBzZWd1bmRvIHNpc3RlbWEuXG4gKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcmltZXJTaXN0ZW1hOiBzdHJpbmcsIHByaXZhdGUgc2VndW5kb1Npc3RlbWE6IHN0cmluZykge31cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gc2UgZW5jYXJnYSBkZSBkYXIgYWNjZXNvIGFsIHZhbG9yIGRlbCBhdHJpYnV0byBwcmltZXJTaXN0ZW1hIFxuICogYXVucXVlIHNlIGFjY2VkYSBkZXNkZSBmdWVyYSBkZSBsYSBjbGFzZSBUZW1wZXJhdHVyYS5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgbm9tYnJlIGRlbCBwcmltZXJTaXN0ZW1hLlxuICovXG4gIGdldFByaW1lclNpc3RlbWEoKSB7XG4gICAgcmV0dXJuIHRoaXMucHJpbWVyU2lzdGVtYTtcbiAgfVxuXG4vKipcbiAqIEVzdGUgbcOpdG9kbyBzZSBlbmNhcmdhIGRlIGRhciBhY2Nlc28gYWwgdmFsb3IgZGVsIGF0cmlidXRvIHNlZ3VuZG9TaXN0ZW1hIFxuICogYXVucXVlIHNlIGFjY2VkYSBkZXNkZSBmdWVyYSBkZSBsYSBjbGFzZSBUZW1wZXJhdHVyYS5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgbm9tYnJlIGRlbCBzZWd1bmRvU2lzdGVtYS5cbiAqL1xuICBnZXRTZWd1bmRvU2lzdGVtYSgpIHtcbiAgICByZXR1cm4gdGhpcy5zZWd1bmRvU2lzdGVtYTtcbiAgfVxuXG4vKipcbiAqIEVzdGUgbcOpdG9kbyBoYWNlIGxhIGNvbnZlcnNpw7NuIGVudHJlIGRvcyBzaXN0ZW1hcyBkZSB1bmlkYWRlcyBkaWZlcmVudGVzXG4gKiBAcGFyYW0gdmFsb3IgRWwgdmFsb3IgcXVlIHRpZW5lIGVsIHNpc3RlbWEgMS5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgdmFsb3IgcXVlIHRpZW5lIGVsIHNpc3RlbWEgMi5cbiAqL1xuICBjb252ZXJzb3IodmFsb3I6IG51bWJlcik6IG51bWJlciB7XG5cbiAgICBsZXQgcmVzdWx0YWRvOiBudW1iZXIgPSAwO1xuXG4gICAgaWYgKHRoaXMuZ2V0UHJpbWVyU2lzdGVtYSgpID09PSBcIkdyYWRvc1wiKSB7XG4gICAgICBpZiAodGhpcy5nZXRTZWd1bmRvU2lzdGVtYSgpID09PSBcIktlbHZpblwiKVxuICAgICAgICByZXN1bHRhZG8gPSB2YWxvciArIDI3MywxNTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5nZXRQcmltZXJTaXN0ZW1hKCkgPT09IFwiS2VsdmluXCIpIHtcbiAgICAgIGlmICh0aGlzLmdldFNlZ3VuZG9TaXN0ZW1hKCkgPT09IFwiR3JhZG9zXCIpXG4gICAgICAgIHJlc3VsdGFkbyA9IHZhbG9yIC0gMjczLDE1O1xuICAgIH1cbiAgICBlbHNlXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb3Mgc2lzdGVtYXMgbm8gc29uIHbDoWxpZG9zLlwiKTtcbiAgICByZXR1cm4gcmVzdWx0YWRvO1xuICB9XG59XG5cbmNvbnN0IHRlbXAxID0gbmV3IFRlbXBlcmF0dXJhKFwiR3JhZG9zXCIsIFwiS2VsdmluXCIpO1xuY29uc29sZS5sb2coXCJcXG4yMCBncmFkb3MgQ2Vsc2l1cyBzb24gXCIgKyB0ZW1wMS5jb252ZXJzb3IoMjApICsgXCIgS2Vsdmlucy5cIik7XG5cbmNvbnN0IHRlbXAyID0gbmV3IFRlbXBlcmF0dXJhKFwiS2VsdmluXCIsIFwiR3JhZG9zXCIpO1xuY29uc29sZS5sb2coXCIzMDAgS2VsdmlucyBzb24gXCIgKyB0ZW1wMi5jb252ZXJzb3IoMzAwKSArIFwiIGdyYWRvcyBDZWxzaXVzLlxcblwiKTsiXX0=
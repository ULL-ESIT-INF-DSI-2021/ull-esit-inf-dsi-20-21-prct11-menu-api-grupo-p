"use strict";function cov_1aquoyfw1w(){var path="/home/usuario/dsi/practica7/src/comanda.ts";var hash="a2ad7dfc75e9dff1a81d6c4815301a265d51bb14";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/dsi/practica7/src/comanda.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:25}},"2":{start:{line:4,column:17},end:{line:4,column:36}},"3":{start:{line:10,column:8},end:{line:10,column:27}},"4":{start:{line:16,column:8},end:{line:16,column:26}},"5":{start:{line:23,column:8},end:{line:23,column:28}},"6":{start:{line:31,column:29},end:{line:31,column:62}},"7":{start:{line:39,column:8},end:{line:41,column:11}},"8":{start:{line:40,column:12},end:{line:40,column:55}},"9":{start:{line:49,column:30},end:{line:49,column:65}},"10":{start:{line:50,column:8},end:{line:52,column:11}},"11":{start:{line:51,column:12},end:{line:51,column:56}},"12":{start:{line:59,column:8},end:{line:59,column:51}},"13":{start:{line:66,column:8},end:{line:66,column:52}},"14":{start:{line:73,column:31},end:{line:73,column:33}},"15":{start:{line:74,column:8},end:{line:86,column:11}},"16":{start:{line:75,column:12},end:{line:75,column:34}},"17":{start:{line:76,column:12},end:{line:85,column:13}},"18":{start:{line:77,column:16},end:{line:79,column:17}},"19":{start:{line:78,column:20},end:{line:78,column:50}},"20":{start:{line:81,column:17},end:{line:85,column:13}},"21":{start:{line:82,column:16},end:{line:84,column:17}},"22":{start:{line:83,column:20},end:{line:83,column:50}},"23":{start:{line:87,column:8},end:{line:87,column:30}},"24":{start:{line:94,column:29},end:{line:94,column:64}},"25":{start:{line:95,column:8},end:{line:95,column:36}},"26":{start:{line:98,column:8},end:{line:116,column:11}},"27":{start:{line:100,column:12},end:{line:100,column:54}},"28":{start:{line:101,column:12},end:{line:103,column:13}},"29":{start:{line:102,column:16},end:{line:102,column:46}},"30":{start:{line:119,column:0},end:{line:119,column:26}},"31":{start:{line:132,column:0},end:{line:136,column:30}},"32":{start:{line:133,column:4},end:{line:133,column:50}},"33":{start:{line:134,column:4},end:{line:134,column:41}},"34":{start:{line:135,column:4},end:{line:135,column:31}},"35":{start:{line:139,column:4},end:{line:139,column:20}},"36":{start:{line:140,column:4},end:{line:145,column:7}},"37":{start:{line:149,column:4},end:{line:149,column:20}},"38":{start:{line:151,column:20},end:{line:156,column:6}},"39":{start:{line:157,column:4},end:{line:168,column:5}},"40":{start:{line:161,column:12},end:{line:161,column:18}},"41":{start:{line:164,column:12},end:{line:164,column:18}},"42":{start:{line:167,column:12},end:{line:167,column:18}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:4},end:{line:9,column:5}},loc:{start:{line:9,column:23},end:{line:17,column:5}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:22,column:21},end:{line:24,column:5}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:40},end:{line:42,column:5}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:29},end:{line:39,column:30}},loc:{start:{line:39,column:42},end:{line:41,column:9}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:48,column:4},end:{line:48,column:5}},loc:{start:{line:48,column:43},end:{line:53,column:5}},line:48},"5":{name:"(anonymous_5)",decl:{start:{line:50,column:30},end:{line:50,column:31}},loc:{start:{line:50,column:43},end:{line:52,column:9}},line:50},"6":{name:"(anonymous_6)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:18},end:{line:60,column:5}},line:58},"7":{name:"(anonymous_7)",decl:{start:{line:65,column:4},end:{line:65,column:5}},loc:{start:{line:65,column:19},end:{line:67,column:5}},line:65},"8":{name:"(anonymous_8)",decl:{start:{line:72,column:4},end:{line:72,column:5}},loc:{start:{line:72,column:31},end:{line:88,column:5}},line:72},"9":{name:"(anonymous_9)",decl:{start:{line:74,column:32},end:{line:74,column:33}},loc:{start:{line:74,column:46},end:{line:86,column:9}},line:74},"10":{name:"(anonymous_10)",decl:{start:{line:93,column:4},end:{line:93,column:5}},loc:{start:{line:93,column:45},end:{line:117,column:5}},line:93},"11":{name:"(anonymous_11)",decl:{start:{line:98,column:29},end:{line:98,column:30}},loc:{start:{line:98,column:43},end:{line:116,column:9}},line:98},"12":{name:"(anonymous_12)",decl:{start:{line:132,column:1},end:{line:132,column:2}},loc:{start:{line:132,column:20},end:{line:136,column:1}},line:132},"13":{name:"promptSecond",decl:{start:{line:138,column:15},end:{line:138,column:27}},loc:{start:{line:138,column:30},end:{line:146,column:1}},line:138},"14":{name:"promptComanda",decl:{start:{line:148,column:9},end:{line:148,column:22}},loc:{start:{line:148,column:25},end:{line:169,column:1}},line:148}},branchMap:{"0":{loc:{start:{line:76,column:12},end:{line:85,column:13}},type:"if",locations:[{start:{line:76,column:12},end:{line:85,column:13}},{start:{line:76,column:12},end:{line:85,column:13}}],line:76},"1":{loc:{start:{line:77,column:16},end:{line:79,column:17}},type:"if",locations:[{start:{line:77,column:16},end:{line:79,column:17}},{start:{line:77,column:16},end:{line:79,column:17}}],line:77},"2":{loc:{start:{line:81,column:17},end:{line:85,column:13}},type:"if",locations:[{start:{line:81,column:17},end:{line:85,column:13}},{start:{line:81,column:17},end:{line:85,column:13}}],line:81},"3":{loc:{start:{line:82,column:16},end:{line:84,column:17}},type:"if",locations:[{start:{line:82,column:16},end:{line:84,column:17}},{start:{line:82,column:16},end:{line:84,column:17}}],line:82},"4":{loc:{start:{line:101,column:12},end:{line:103,column:13}},type:"if",locations:[{start:{line:101,column:12},end:{line:103,column:13}},{start:{line:101,column:12},end:{line:103,column:13}}],line:101},"5":{loc:{start:{line:136,column:3},end:{line:136,column:28}},type:"binary-expr",locations:[{start:{line:136,column:3},end:{line:136,column:10}},{start:{line:136,column:15},end:{line:136,column:27}}],line:136},"6":{loc:{start:{line:157,column:4},end:{line:168,column:5}},type:"switch",locations:[{start:{line:158,column:8},end:{line:161,column:18}},{start:{line:162,column:8},end:{line:164,column:18}},{start:{line:165,column:8},end:{line:167,column:18}}],line:157}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},inputSourceMap:{version:3,file:"/home/usuario/dsi/practica7/src/comanda.ts",sources:["/home/usuario/dsi/practica7/src/comanda.ts"],names:[],mappings:"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",sourcesContent:["import { Carta } from \"./carta\";\nimport { Plato } from \"./plato\";\nimport { Menu } from \"./menu\";\n\nconst inquirer = require('inquirer');\n\n/**\n * Esta es la clase Comanda. \n */\nexport class Comanda {\n  /**\n   * Constructor de la clase Comanda.\n   * @param carta Nombre de la carta.\n   */\n  // Comanda -> [Lo que pide, cantidad de lo que pide]\n  private comanda: [Menu|Plato, number][] = [];\n  constructor(private carta: Carta) { //, private arrayComanda: [Menu|Plato, number][]) {\n  }\n\n  /**\n   * Obtiene la comanda.\n   * @returns La comanda entera.\n   */\n  mostrarComanda() {\n    return this.comanda;\n  }\n  \n  /**\n   * M\xE9todo que permite al cliente a\xF1adir un men\xFA a la comanda\n   * @param nombreMenu El nombre del men\xFA que quiere a\xF1adir a la comanda.\n   * @param cantidadMenu La cantidad de men\xFAs que quiere a\xF1adir a la comanda.\n   */\n  sumarMenu(nombreMenu: string, cantidadMenu: number) {\n    const matchedMenus = this.carta.searchMenu(nombreMenu);\n    // EN ESTE PUNTO, SI HAY CERO O M\xC1S DE DOS COINCIDENCIAS EN EL MEN\xDA \n    // preguntar al cliente con cu\xE1l de ellas se quiere quedar u ofrecerle buscar de nuevo. \n\n    /**\n     * Esto lo que hace es que todos los platos que coincidan con el nombre buscado,\n     * los a\xF1ade igualmente a la comanda y en la misma cantidad.\n     * As\xED que HAY QUE ARREGLARLO.\n     */\n    matchedMenus.forEach((element) => {\n      this.comanda.push([element, cantidadMenu]);\n    });\n  }\n\n  /**\n   * M\xE9todo que permite al cliente a\xF1adir un plato a la comanda\n   * @param nombrePlato El nombre del plato que quiere a\xF1adir a la comanda.\n   * @param cantidadPlato La cantidad de este tipo de platos que quiere a\xF1adir a la comanda.\n   */\n  sumarPlato(nombrePlato: string, cantidadPlato: number) {\n    const matchedPlatos = this.carta.searchPlato(nombrePlato);\n\n    matchedPlatos.forEach((element) => {\n      this.comanda.push([element, cantidadPlato]);\n    });\n  }\n\n  /**\n   * Funci\xF3n para deshacer el guardi\xE1n de tipos.\n   * @returns True si el objeto es de clase Menu.\n   */\n  isMenu(myObj: any): myObj is Menu {\n    return myObj.getNombreMenu() !== undefined;\n  }\n\n  /**\n   * Funci\xF3n para deshacer el guardi\xE1n de tipos.\n   * @returns True si el objeto es de clase Plato.\n   */\n  isPlato(myObj: any): myObj is Plato {\n    return myObj.getNombrePlato() !== undefined;\n  }\n\n  /**\n   * M\xE9todo que permite encontrar una comanda deseada.\n   * @param nombre Nombre de la comanda a buscar.\n   */\n  encontrarEnComanda(nombre: string) {\n    const matchedResults: (Menu|Plato)[] = [];\n    this.comanda[0].forEach((elemento) => {\n      console.log(elemento);\n      if (this.isMenu(elemento)) {\n        if (elemento.getNombreMenu().search(nombre) > -1) {\n          matchedResults.push(elemento);\n        }\n      } else if (this.isPlato(elemento)) {\n        if (elemento.getNombrePlato().search(nombre) > -1) {\n          matchedResults.push(elemento);\n        }\n      }\n    });\n    return matchedResults;\n  }\n\n  /**\n   * M\xE9todo que permite eliminar una comanda deseada.\n   * @param nombre Nombre de la comanda a eliminar.\n   */\n  quitarElemento(nombreMenu: string, cantidadMenu: number) {\n    const matchedMenus: (Menu|Plato)[] = this.encontrarEnComanda(nombreMenu);\n    console.table(matchedMenus);      // IMPRIMIR PARA COMPROBAR QU\xC9 ENCUENTRA PARA BORRAR\n    let index;\n    let valorObjeto: (Menu|Plato);\n    this.comanda.forEach((elemento) => {\n      //valorObjeto = elemento[0];\n      index = this.comanda.indexOf(elemento, 0);\n      if (index > -1) {\n        this.comanda.splice(index, 1);\n      }\n        /*\n      if (this.isMenu(element[0])) {\n        index = this.comanda.indexOf(element[0], 0);\n        if (index > -1) {\n          this.comanda.splice(index, 1);\n        }\n      } else if (this.isPlato(element[0]) {\n        index = this.comanda.indexOf(element[0], 0);\n        if (index > -1) {\n          this.comanda.splice(index, 1);\n        }\n      }*/\n    });\n  }\n}\n\n/*\n* 1: Visualizar la carta del restaurante: Para cada men\xFA y/o plato, \n*   el cliente querr\xE1 poder observar toda la informaci\xF3n que tiene \n*   (precio, ingredientes, composici\xF3n nutricional y grupos de alimentos).\n*\n* 2: Realizar una comanda: El cliente podra: -> Elegir una comanda del menu preestablecido\n*                                            -> Podra crear un menu personalizado en base a la carta -> visualizar la carta\n*                                                                                                     -> Elegir platos y cantidad\n*                                            -> Podra modificar uno de los menu preestablecidos -> Eliminando platos\n*/\n\n//Esto enumarara las diferentes opciones del menu principal\nenum options{\n  Visualizar = \"Visualizar la Carta\",\n  Comanda = \"Hacer comanda\",\n  Salir = \"Salir\"\n}\n\n//Segundo Menu para el caso de  Comandas\nasync function promptSecond(): Promise<void> {\n  console.clear();\n  inquirer.prompt({\n    type: 'list',\n    name: 'segundarespuesta',\n    Message: '\xBFQue desea hacer ahora?',\n    choices: ''\n    \n  })\n}\n\n// Funcion principal del menu \nfunction promptComanda(){\n  console.clear();\n  //seria necesario el async si quisieramos ejecutar algo aqui a parte como la visualizacion de algo\n  const answers = inquirer.prompt({\n    type: 'list',\n    name: 'respuesta',\n    message: 'Seleccione una opcion:',\n    choices: Object.values(options)\n  });\n  \n  switch (answers[\"respuesta\"]) {\n    case options.Visualizar:\n      //Llamada a un funcion que devuelva la carta del restaurante \n      //let miCarta = new Carta(nombre,todos los menus de la carta, platos sueltos);\n      break;\n\n    case options.Comanda:\n      //Aqui va la funcion que ejecuta un menu interno que permite modificar o seleccionar un menu personalizado\n      break;\n    case options.Salir:\n      //salimos\n      break;\n  }\n}"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a2ad7dfc75e9dff1a81d6c4815301a265d51bb14"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1aquoyfw1w=function(){return actualCoverage;};}return actualCoverage;}cov_1aquoyfw1w();cov_1aquoyfw1w().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1aquoyfw1w().s[1]++;exports.Comanda=void 0;const inquirer=(cov_1aquoyfw1w().s[2]++,require('inquirer'));/**
 * Esta es la clase Comanda.
 */class Comanda{constructor(carta){cov_1aquoyfw1w().f[0]++;cov_1aquoyfw1w().s[3]++;this.carta=carta;/**
         * Constructor de la clase Comanda.
         * @param carta Nombre de la carta.
         */ // Comanda -> [Lo que pide, cantidad de lo que pide]
cov_1aquoyfw1w().s[4]++;this.comanda=[];}/**
     * Obtiene la comanda.
     * @returns La comanda entera.
     */mostrarComanda(){cov_1aquoyfw1w().f[1]++;cov_1aquoyfw1w().s[5]++;return this.comanda;}/**
     * Método que permite al cliente añadir un menú a la comanda
     * @param nombreMenu El nombre del menú que quiere añadir a la comanda.
     * @param cantidadMenu La cantidad de menús que quiere añadir a la comanda.
     */sumarMenu(nombreMenu,cantidadMenu){cov_1aquoyfw1w().f[2]++;const matchedMenus=(cov_1aquoyfw1w().s[6]++,this.carta.searchMenu(nombreMenu));// EN ESTE PUNTO, SI HAY CERO O MÁS DE DOS COINCIDENCIAS EN EL MENÚ 
// preguntar al cliente con cuál de ellas se quiere quedar u ofrecerle buscar de nuevo. 
/**
         * Esto lo que hace es que todos los platos que coincidan con el nombre buscado,
         * los añade igualmente a la comanda y en la misma cantidad.
         * Así que HAY QUE ARREGLARLO.
         */cov_1aquoyfw1w().s[7]++;matchedMenus.forEach(element=>{cov_1aquoyfw1w().f[3]++;cov_1aquoyfw1w().s[8]++;this.comanda.push([element,cantidadMenu]);});}/**
     * Método que permite al cliente añadir un plato a la comanda
     * @param nombrePlato El nombre del plato que quiere añadir a la comanda.
     * @param cantidadPlato La cantidad de este tipo de platos que quiere añadir a la comanda.
     */sumarPlato(nombrePlato,cantidadPlato){cov_1aquoyfw1w().f[4]++;const matchedPlatos=(cov_1aquoyfw1w().s[9]++,this.carta.searchPlato(nombrePlato));cov_1aquoyfw1w().s[10]++;matchedPlatos.forEach(element=>{cov_1aquoyfw1w().f[5]++;cov_1aquoyfw1w().s[11]++;this.comanda.push([element,cantidadPlato]);});}/**
     * Función para deshacer el guardián de tipos.
     * @returns True si el objeto es de clase Menu.
     */isMenu(myObj){cov_1aquoyfw1w().f[6]++;cov_1aquoyfw1w().s[12]++;return myObj.getNombreMenu()!==undefined;}/**
     * Función para deshacer el guardián de tipos.
     * @returns True si el objeto es de clase Plato.
     */isPlato(myObj){cov_1aquoyfw1w().f[7]++;cov_1aquoyfw1w().s[13]++;return myObj.getNombrePlato()!==undefined;}/**
     * Método que permite encontrar una comanda deseada.
     * @param nombre Nombre de la comanda a buscar.
     */encontrarEnComanda(nombre){cov_1aquoyfw1w().f[8]++;const matchedResults=(cov_1aquoyfw1w().s[14]++,[]);cov_1aquoyfw1w().s[15]++;this.comanda[0].forEach(elemento=>{cov_1aquoyfw1w().f[9]++;cov_1aquoyfw1w().s[16]++;console.log(elemento);cov_1aquoyfw1w().s[17]++;if(this.isMenu(elemento)){cov_1aquoyfw1w().b[0][0]++;cov_1aquoyfw1w().s[18]++;if(elemento.getNombreMenu().search(nombre)>-1){cov_1aquoyfw1w().b[1][0]++;cov_1aquoyfw1w().s[19]++;matchedResults.push(elemento);}else{cov_1aquoyfw1w().b[1][1]++;}}else{cov_1aquoyfw1w().b[0][1]++;cov_1aquoyfw1w().s[20]++;if(this.isPlato(elemento)){cov_1aquoyfw1w().b[2][0]++;cov_1aquoyfw1w().s[21]++;if(elemento.getNombrePlato().search(nombre)>-1){cov_1aquoyfw1w().b[3][0]++;cov_1aquoyfw1w().s[22]++;matchedResults.push(elemento);}else{cov_1aquoyfw1w().b[3][1]++;}}else{cov_1aquoyfw1w().b[2][1]++;}}});cov_1aquoyfw1w().s[23]++;return matchedResults;}/**
     * Método que permite eliminar una comanda deseada.
     * @param nombre Nombre de la comanda a eliminar.
     */quitarElemento(nombreMenu,cantidadMenu){cov_1aquoyfw1w().f[10]++;const matchedMenus=(cov_1aquoyfw1w().s[24]++,this.encontrarEnComanda(nombreMenu));cov_1aquoyfw1w().s[25]++;console.table(matchedMenus);// IMPRIMIR PARA COMPROBAR QUÉ ENCUENTRA PARA BORRAR
let index;let valorObjeto;cov_1aquoyfw1w().s[26]++;this.comanda.forEach(elemento=>{cov_1aquoyfw1w().f[11]++;cov_1aquoyfw1w().s[27]++;//valorObjeto = elemento[0];
index=this.comanda.indexOf(elemento,0);cov_1aquoyfw1w().s[28]++;if(index>-1){cov_1aquoyfw1w().b[4][0]++;cov_1aquoyfw1w().s[29]++;this.comanda.splice(index,1);}else{cov_1aquoyfw1w().b[4][1]++;}/*
          if (this.isMenu(element[0])) {
            index = this.comanda.indexOf(element[0], 0);
            if (index > -1) {
              this.comanda.splice(index, 1);
            }
          } else if (this.isPlato(element[0]) {
            index = this.comanda.indexOf(element[0], 0);
            if (index > -1) {
              this.comanda.splice(index, 1);
            }
          }*/});}}cov_1aquoyfw1w().s[30]++;exports.Comanda=Comanda;/*
* 1: Visualizar la carta del restaurante: Para cada menú y/o plato,
*   el cliente querrá poder observar toda la información que tiene
*   (precio, ingredientes, composición nutricional y grupos de alimentos).
*
* 2: Realizar una comanda: El cliente podra: -> Elegir una comanda del menu preestablecido
*                                            -> Podra crear un menu personalizado en base a la carta -> visualizar la carta
*                                                                                                     -> Elegir platos y cantidad
*                                            -> Podra modificar uno de los menu preestablecidos -> Eliminando platos
*/ //Esto enumarara las diferentes opciones del menu principal
var options;cov_1aquoyfw1w().s[31]++;(function(options){cov_1aquoyfw1w().f[12]++;cov_1aquoyfw1w().s[32]++;options["Visualizar"]="Visualizar la Carta";cov_1aquoyfw1w().s[33]++;options["Comanda"]="Hacer comanda";cov_1aquoyfw1w().s[34]++;options["Salir"]="Salir";})((cov_1aquoyfw1w().b[5][0]++,options)||(cov_1aquoyfw1w().b[5][1]++,options={}));//Segundo Menu para el caso de  Comandas
async function promptSecond(){cov_1aquoyfw1w().f[13]++;cov_1aquoyfw1w().s[35]++;console.clear();cov_1aquoyfw1w().s[36]++;inquirer.prompt({type:'list',name:'segundarespuesta',Message:'¿Que desea hacer ahora?',choices:''});}// Funcion principal del menu 
function promptComanda(){cov_1aquoyfw1w().f[14]++;cov_1aquoyfw1w().s[37]++;console.clear();//seria necesario el async si quisieramos ejecutar algo aqui a parte como la visualizacion de algo
const answers=(cov_1aquoyfw1w().s[38]++,inquirer.prompt({type:'list',name:'respuesta',message:'Seleccione una opcion:',choices:Object.values(options)}));cov_1aquoyfw1w().s[39]++;switch(answers["respuesta"]){case options.Visualizar:cov_1aquoyfw1w().b[6][0]++;cov_1aquoyfw1w().s[40]++;//Llamada a un funcion que devuelva la carta del restaurante 
//let miCarta = new Carta(nombre,todos los menus de la carta, platos sueltos);
break;case options.Comanda:cov_1aquoyfw1w().b[6][1]++;cov_1aquoyfw1w().s[41]++;//Aqui va la funcion que ejecuta un menu interno que permite modificar o seleccionar un menu personalizado
break;case options.Salir:cov_1aquoyfw1w().b[6][2]++;cov_1aquoyfw1w().s[42]++;//salimos
break;}}//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
"use strict";function cov_17xhqj75oh(){var path="/home/usuario/dsi/practica6/src/ejercicio-2/velocidad.ts";var hash="14cbaafe3f5ba770d4ad047ab83a2fc8779316c2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/dsi/practica6/src/ejercicio-2/velocidad.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:27}},"2":{start:{line:14,column:8},end:{line:14,column:43}},"3":{start:{line:15,column:8},end:{line:15,column:45}},"4":{start:{line:22,column:8},end:{line:22,column:34}},"5":{start:{line:29,column:8},end:{line:29,column:35}},"6":{start:{line:37,column:24},end:{line:37,column:25}},"7":{start:{line:38,column:8},end:{line:47,column:60}},"8":{start:{line:39,column:12},end:{line:40,column:45}},"9":{start:{line:40,column:16},end:{line:40,column:45}},"10":{start:{line:42,column:13},end:{line:47,column:60}},"11":{start:{line:43,column:12},end:{line:44,column:44}},"12":{start:{line:44,column:16},end:{line:44,column:44}},"13":{start:{line:47,column:12},end:{line:47,column:60}},"14":{start:{line:48,column:8},end:{line:48,column:25}},"15":{start:{line:51,column:0},end:{line:51,column:30}},"16":{start:{line:52,column:13},end:{line:52,column:68}},"17":{start:{line:53,column:0},end:{line:53,column:88}},"18":{start:{line:54,column:13},end:{line:54,column:68}},"19":{start:{line:55,column:0},end:{line:55,column:88}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:47},end:{line:16,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:23},end:{line:23,column:5}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:24},end:{line:30,column:5}},line:28},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:21},end:{line:49,column:5}},line:36}},branchMap:{"0":{loc:{start:{line:38,column:8},end:{line:47,column:60}},type:"if",locations:[{start:{line:38,column:8},end:{line:47,column:60}},{start:{line:38,column:8},end:{line:47,column:60}}],line:38},"1":{loc:{start:{line:39,column:12},end:{line:40,column:45}},type:"if",locations:[{start:{line:39,column:12},end:{line:40,column:45}},{start:{line:39,column:12},end:{line:40,column:45}}],line:39},"2":{loc:{start:{line:42,column:13},end:{line:47,column:60}},type:"if",locations:[{start:{line:42,column:13},end:{line:47,column:60}},{start:{line:42,column:13},end:{line:47,column:60}}],line:42},"3":{loc:{start:{line:43,column:12},end:{line:44,column:44}},type:"if",locations:[{start:{line:43,column:12},end:{line:44,column:44}},{start:{line:43,column:12},end:{line:44,column:44}}],line:43}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/dsi/practica6/src/ejercicio-2/velocidad.ts",sources:["/home/usuario/dsi/practica6/src/ejercicio-2/velocidad.ts"],names:[],mappings:";;;AAEA;;GAEG;AACH,MAAa,SAAS;IACtB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;OAGG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;OAGG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,qBAAqB,EAAE;YACrD,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,iBAAiB;gBAChD,SAAS,GAAG,KAAK,GAAG,QAAQ,CAAC;SAChC;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,iBAAiB,EAAE;YACtD,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,qBAAqB;gBACpD,SAAS,GAAG,KAAK,GAAG,OAAO,CAAC;SAC/B;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA7CD,8BA6CC;AAED,MAAM,IAAI,GAAG,IAAI,SAAS,CAAC,qBAAqB,EAAE,iBAAiB,CAAC,CAAC;AACrE,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,CAAC;AAExF,MAAM,IAAI,GAAG,IAAI,SAAS,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;AACrE,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,yBAAyB,CAAC,CAAC",sourcesContent:["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Velocidad.__\n */\nexport class Velocidad implements isConvertible<number> {\n/**\n * Constructor de la clase Velocidad.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este m\xE9todo se encarga de dar acceso al valor del atributo primerSistema aunque se acceda desde fuera de la clase Velocidad.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este m\xE9todo se encarga de dar acceso al valor del atributo segundoSistema aunque se acceda desde fuera de la clase Velocidad.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este m\xE9todo hace la conversi\xF3n entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"kilometros por hora\") {\n      if (this.getSegundoSistema() === \"millas por hora\")\n        resultado = valor * 0.621371;\n    }\n    else if (this.getPrimerSistema() === \"millas por hora\") {\n      if (this.getSegundoSistema() === \"kilometros por hora\")\n        resultado = valor * 1.60934;\n    }\n    else\n      throw new Error(\"Los sistemas no son v\xE1lidos.\");\n    return resultado;\n  }\n}\n\nconst vel1 = new Velocidad(\"kilometros por hora\", \"millas por hora\");\nconsole.log(\"\\n20 kilometros por hora son \" + vel1.conversor(20) + \" millas por hora.\");\n\nconst vel2 = new Velocidad(\"millas por hora\", \"kilometros por hora\");\nconsole.log(\"20 millas por hora son \" + vel2.conversor(20) + \" kilometros por hora.\\n\");"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"14cbaafe3f5ba770d4ad047ab83a2fc8779316c2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_17xhqj75oh=function(){return actualCoverage;};}return actualCoverage;}cov_17xhqj75oh();cov_17xhqj75oh().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_17xhqj75oh().s[1]++;exports.Velocidad=void 0;/**
 * __Esta es la clase Velocidad.__
 */class Velocidad{/**
     * Constructor de la clase Velocidad.
     * @param primerSistema Nombre del primer sistema.
     * @param segundoSistema Nombre del segundo sistema.
     */constructor(primerSistema,segundoSistema){cov_17xhqj75oh().f[0]++;cov_17xhqj75oh().s[2]++;this.primerSistema=primerSistema;cov_17xhqj75oh().s[3]++;this.segundoSistema=segundoSistema;}/**
     * Este método se encarga de dar acceso al valor del atributo primerSistema aunque se acceda desde fuera de la clase Velocidad.
     * @return Devuelve el nombre del primerSistema.
     */getPrimerSistema(){cov_17xhqj75oh().f[1]++;cov_17xhqj75oh().s[4]++;return this.primerSistema;}/**
     * Este método se encarga de dar acceso al valor del atributo segundoSistema aunque se acceda desde fuera de la clase Velocidad.
     * @return Devuelve el nombre del segundoSistema.
     */getSegundoSistema(){cov_17xhqj75oh().f[2]++;cov_17xhqj75oh().s[5]++;return this.segundoSistema;}/**
     * Este método hace la conversión entre dos sistemas de unidades diferentes
     * @param valor El valor que tiene el sistema 1.
     * @return Devuelve el valor que tiene el sistema 2.
     */conversor(valor){cov_17xhqj75oh().f[3]++;let resultado=(cov_17xhqj75oh().s[6]++,0);cov_17xhqj75oh().s[7]++;if(this.getPrimerSistema()==="kilometros por hora"){cov_17xhqj75oh().b[0][0]++;cov_17xhqj75oh().s[8]++;if(this.getSegundoSistema()==="millas por hora"){cov_17xhqj75oh().b[1][0]++;cov_17xhqj75oh().s[9]++;resultado=valor*0.621371;}else{cov_17xhqj75oh().b[1][1]++;}}else{cov_17xhqj75oh().b[0][1]++;cov_17xhqj75oh().s[10]++;if(this.getPrimerSistema()==="millas por hora"){cov_17xhqj75oh().b[2][0]++;cov_17xhqj75oh().s[11]++;if(this.getSegundoSistema()==="kilometros por hora"){cov_17xhqj75oh().b[3][0]++;cov_17xhqj75oh().s[12]++;resultado=valor*1.60934;}else{cov_17xhqj75oh().b[3][1]++;}}else{cov_17xhqj75oh().b[2][1]++;cov_17xhqj75oh().s[13]++;throw new Error("Los sistemas no son válidos.");}}cov_17xhqj75oh().s[14]++;return resultado;}}cov_17xhqj75oh().s[15]++;exports.Velocidad=Velocidad;const vel1=(cov_17xhqj75oh().s[16]++,new Velocidad("kilometros por hora","millas por hora"));cov_17xhqj75oh().s[17]++;console.log("\n20 kilometros por hora son "+vel1.conversor(20)+" millas por hora.");const vel2=(cov_17xhqj75oh().s[18]++,new Velocidad("millas por hora","kilometros por hora"));cov_17xhqj75oh().s[19]++;console.log("20 millas por hora son "+vel2.conversor(20)+" kilometros por hora.\n");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9kc2kvcHJhY3RpY2E2L3NyYy9lamVyY2ljaW8tMi92ZWxvY2lkYWQudHMiLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vZHNpL3ByYWN0aWNhNi9zcmMvZWplcmNpY2lvLTIvdmVsb2NpZGFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBOztHQUVHO0FBQ0gsTUFBYSxTQUFTO0lBQ3RCOzs7O09BSUc7SUFDRCxZQUFvQixhQUFxQixFQUFVLGNBQXNCO1FBQXJELGtCQUFhLEdBQWIsYUFBYSxDQUFRO1FBQVUsbUJBQWMsR0FBZCxjQUFjLENBQVE7SUFBRyxDQUFDO0lBRS9FOzs7T0FHRztJQUNELGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBRUg7OztPQUdHO0lBQ0QsaUJBQWlCO1FBQ2YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFSDs7OztPQUlHO0lBQ0QsU0FBUyxDQUFDLEtBQWE7UUFFckIsSUFBSSxTQUFTLEdBQVcsQ0FBQyxDQUFDO1FBRTFCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFLEtBQUsscUJBQXFCLEVBQUU7WUFDckQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxpQkFBaUI7Z0JBQ2hELFNBQVMsR0FBRyxLQUFLLEdBQUcsUUFBUSxDQUFDO1NBQ2hDO2FBQ0ksSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxpQkFBaUIsRUFBRTtZQUN0RCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxLQUFLLHFCQUFxQjtnQkFDcEQsU0FBUyxHQUFHLEtBQUssR0FBRyxPQUFPLENBQUM7U0FDL0I7O1lBRUMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1FBQ2xELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQTdDRCw4QkE2Q0M7QUFFRCxNQUFNLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxxQkFBcUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3JFLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0FBRXhGLE1BQU0sSUFBSSxHQUFHLElBQUksU0FBUyxDQUFDLGlCQUFpQixFQUFFLHFCQUFxQixDQUFDLENBQUM7QUFDckUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxHQUFHLHlCQUF5QixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0NvbnZlcnRpYmxlIH0gZnJvbSAnLi9pc0NvbnZlcnRpYmxlJztcblxuLyoqXG4gKiBfX0VzdGEgZXMgbGEgY2xhc2UgVmVsb2NpZGFkLl9fXG4gKi9cbmV4cG9ydCBjbGFzcyBWZWxvY2lkYWQgaW1wbGVtZW50cyBpc0NvbnZlcnRpYmxlPG51bWJlcj4ge1xuLyoqXG4gKiBDb25zdHJ1Y3RvciBkZSBsYSBjbGFzZSBWZWxvY2lkYWQuXG4gKiBAcGFyYW0gcHJpbWVyU2lzdGVtYSBOb21icmUgZGVsIHByaW1lciBzaXN0ZW1hLlxuICogQHBhcmFtIHNlZ3VuZG9TaXN0ZW1hIE5vbWJyZSBkZWwgc2VndW5kbyBzaXN0ZW1hLlxuICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJpbWVyU2lzdGVtYTogc3RyaW5nLCBwcml2YXRlIHNlZ3VuZG9TaXN0ZW1hOiBzdHJpbmcpIHt9XG5cbi8qKlxuICogRXN0ZSBtw6l0b2RvIHNlIGVuY2FyZ2EgZGUgZGFyIGFjY2VzbyBhbCB2YWxvciBkZWwgYXRyaWJ1dG8gcHJpbWVyU2lzdGVtYSBhdW5xdWUgc2UgYWNjZWRhIGRlc2RlIGZ1ZXJhIGRlIGxhIGNsYXNlIFZlbG9jaWRhZC5cbiAqIEByZXR1cm4gRGV2dWVsdmUgZWwgbm9tYnJlIGRlbCBwcmltZXJTaXN0ZW1hLlxuICovXG4gIGdldFByaW1lclNpc3RlbWEoKSB7XG4gICAgcmV0dXJuIHRoaXMucHJpbWVyU2lzdGVtYTtcbiAgfVxuXG4vKipcbiAqIEVzdGUgbcOpdG9kbyBzZSBlbmNhcmdhIGRlIGRhciBhY2Nlc28gYWwgdmFsb3IgZGVsIGF0cmlidXRvIHNlZ3VuZG9TaXN0ZW1hIGF1bnF1ZSBzZSBhY2NlZGEgZGVzZGUgZnVlcmEgZGUgbGEgY2xhc2UgVmVsb2NpZGFkLlxuICogQHJldHVybiBEZXZ1ZWx2ZSBlbCBub21icmUgZGVsIHNlZ3VuZG9TaXN0ZW1hLlxuICovXG4gIGdldFNlZ3VuZG9TaXN0ZW1hKCkge1xuICAgIHJldHVybiB0aGlzLnNlZ3VuZG9TaXN0ZW1hO1xuICB9XG5cbi8qKlxuICogRXN0ZSBtw6l0b2RvIGhhY2UgbGEgY29udmVyc2nDs24gZW50cmUgZG9zIHNpc3RlbWFzIGRlIHVuaWRhZGVzIGRpZmVyZW50ZXNcbiAqIEBwYXJhbSB2YWxvciBFbCB2YWxvciBxdWUgdGllbmUgZWwgc2lzdGVtYSAxLlxuICogQHJldHVybiBEZXZ1ZWx2ZSBlbCB2YWxvciBxdWUgdGllbmUgZWwgc2lzdGVtYSAyLlxuICovXG4gIGNvbnZlcnNvcih2YWxvcjogbnVtYmVyKTogbnVtYmVyIHtcblxuICAgIGxldCByZXN1bHRhZG86IG51bWJlciA9IDA7XG5cbiAgICBpZiAodGhpcy5nZXRQcmltZXJTaXN0ZW1hKCkgPT09IFwia2lsb21ldHJvcyBwb3IgaG9yYVwiKSB7XG4gICAgICBpZiAodGhpcy5nZXRTZWd1bmRvU2lzdGVtYSgpID09PSBcIm1pbGxhcyBwb3IgaG9yYVwiKVxuICAgICAgICByZXN1bHRhZG8gPSB2YWxvciAqIDAuNjIxMzcxO1xuICAgIH1cbiAgICBlbHNlIGlmICh0aGlzLmdldFByaW1lclNpc3RlbWEoKSA9PT0gXCJtaWxsYXMgcG9yIGhvcmFcIikge1xuICAgICAgaWYgKHRoaXMuZ2V0U2VndW5kb1Npc3RlbWEoKSA9PT0gXCJraWxvbWV0cm9zIHBvciBob3JhXCIpXG4gICAgICAgIHJlc3VsdGFkbyA9IHZhbG9yICogMS42MDkzNDtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9zIHNpc3RlbWFzIG5vIHNvbiB2w6FsaWRvcy5cIik7XG4gICAgcmV0dXJuIHJlc3VsdGFkbztcbiAgfVxufVxuXG5jb25zdCB2ZWwxID0gbmV3IFZlbG9jaWRhZChcImtpbG9tZXRyb3MgcG9yIGhvcmFcIiwgXCJtaWxsYXMgcG9yIGhvcmFcIik7XG5jb25zb2xlLmxvZyhcIlxcbjIwIGtpbG9tZXRyb3MgcG9yIGhvcmEgc29uIFwiICsgdmVsMS5jb252ZXJzb3IoMjApICsgXCIgbWlsbGFzIHBvciBob3JhLlwiKTtcblxuY29uc3QgdmVsMiA9IG5ldyBWZWxvY2lkYWQoXCJtaWxsYXMgcG9yIGhvcmFcIiwgXCJraWxvbWV0cm9zIHBvciBob3JhXCIpO1xuY29uc29sZS5sb2coXCIyMCBtaWxsYXMgcG9yIGhvcmEgc29uIFwiICsgdmVsMi5jb252ZXJzb3IoMjApICsgXCIga2lsb21ldHJvcyBwb3IgaG9yYS5cXG5cIik7Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vZHNpL3ByYWN0aWNhNi9zcmMvZWplcmNpY2lvLTIvdmVsb2NpZGFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI2ek1BVytFOzZOQVQvRTs7QUFFRyxHQUNILEtBQWEsQ0FBQSxTQUFTLENBQ3RCOzs7O0FBSUcsT0FDRCxXQUFBLENBQW9CLGFBQXBCLENBQW1ELGNBQW5ELENBQXlFLGlEQUFyRCxLQUFBLGFBQUEsQ0FBQSxhQUFBLENBQXFELHdCQUF0QixLQUFBLGNBQUEsQ0FBQSxjQUFBLENBQTBCLENBRS9FOzs7QUFHRyxPQUNELGdCQUFnQixFQUFBLGlEQUNkLE1BQU8sTUFBSyxhQUFaLENBQ0QsQ0FFSDs7O0FBR0csT0FDRCxpQkFBaUIsRUFBQSxpREFDZixNQUFPLE1BQUssY0FBWixDQUNELENBRUg7Ozs7QUFJRyxPQUNELFNBQVMsQ0FBQyxLQUFELENBQWMseUJBRXJCLEdBQUksQ0FBQSxTQUFTLDBCQUFXLENBQVgsQ0FBYixDQUZxQix3QkFJckIsR0FBSSxLQUFLLGdCQUFMLEtBQTRCLHFCQUFoQyxDQUF1RCxvREFDckQsR0FBSSxLQUFLLGlCQUFMLEtBQTZCLGlCQUFqQyxDQUNFLG9EQUFBLFNBQVMsQ0FBRyxLQUFLLENBQUcsUUFBcEIsQ0FBNkIsQ0FEL0IsaUNBRUQsQ0FIRCxJQUlLLHdEQUFJLEtBQUssZ0JBQUwsS0FBNEIsaUJBQWhDLENBQW1ELHFEQUN0RCxHQUFJLEtBQUssaUJBQUwsS0FBNkIscUJBQWpDLENBQ0UscURBQUEsU0FBUyxDQUFHLEtBQUssQ0FBRyxPQUFwQixDQUE0QixDQUQ5QixpQ0FFRCxDQUhJLElBS0gsMERBQU0sSUFBSSxDQUFBLEtBQUosQ0FBVSw4QkFBVixDQUFOLENBQWdELEVBYjdCLHlCQWNyQixNQUFPLENBQUEsU0FBUCxDQUNELENBNUNtQixDLHlCQUF0QixPQUFBLENBQUEsU0FBQSxDQUFBLFNBQUEsQ0ErQ0EsS0FBTSxDQUFBLElBQUksMkJBQUcsR0FBSSxDQUFBLFNBQUosQ0FBYyxxQkFBZCxDQUFxQyxpQkFBckMsQ0FBSCxDQUFWLEMseUJBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxnQ0FBa0MsSUFBSSxDQUFDLFNBQUwsQ0FBZSxFQUFmLENBQWxDLENBQXVELG1CQUFuRSxFQUVBLEtBQU0sQ0FBQSxJQUFJLDJCQUFHLEdBQUksQ0FBQSxTQUFKLENBQWMsaUJBQWQsQ0FBaUMscUJBQWpDLENBQUgsQ0FBVixDLHlCQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksMEJBQTRCLElBQUksQ0FBQyxTQUFMLENBQWUsRUFBZixDQUE1QixDQUFpRCx5QkFBN0QsRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQ29udmVydGlibGUgfSBmcm9tICcuL2lzQ29udmVydGlibGUnO1xuXG4vKipcbiAqIF9fRXN0YSBlcyBsYSBjbGFzZSBWZWxvY2lkYWQuX19cbiAqL1xuZXhwb3J0IGNsYXNzIFZlbG9jaWRhZCBpbXBsZW1lbnRzIGlzQ29udmVydGlibGU8bnVtYmVyPiB7XG4vKipcbiAqIENvbnN0cnVjdG9yIGRlIGxhIGNsYXNlIFZlbG9jaWRhZC5cbiAqIEBwYXJhbSBwcmltZXJTaXN0ZW1hIE5vbWJyZSBkZWwgcHJpbWVyIHNpc3RlbWEuXG4gKiBAcGFyYW0gc2VndW5kb1Npc3RlbWEgTm9tYnJlIGRlbCBzZWd1bmRvIHNpc3RlbWEuXG4gKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcmltZXJTaXN0ZW1hOiBzdHJpbmcsIHByaXZhdGUgc2VndW5kb1Npc3RlbWE6IHN0cmluZykge31cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gc2UgZW5jYXJnYSBkZSBkYXIgYWNjZXNvIGFsIHZhbG9yIGRlbCBhdHJpYnV0byBwcmltZXJTaXN0ZW1hIGF1bnF1ZSBzZSBhY2NlZGEgZGVzZGUgZnVlcmEgZGUgbGEgY2xhc2UgVmVsb2NpZGFkLlxuICogQHJldHVybiBEZXZ1ZWx2ZSBlbCBub21icmUgZGVsIHByaW1lclNpc3RlbWEuXG4gKi9cbiAgZ2V0UHJpbWVyU2lzdGVtYSgpIHtcbiAgICByZXR1cm4gdGhpcy5wcmltZXJTaXN0ZW1hO1xuICB9XG5cbi8qKlxuICogRXN0ZSBtw6l0b2RvIHNlIGVuY2FyZ2EgZGUgZGFyIGFjY2VzbyBhbCB2YWxvciBkZWwgYXRyaWJ1dG8gc2VndW5kb1Npc3RlbWEgYXVucXVlIHNlIGFjY2VkYSBkZXNkZSBmdWVyYSBkZSBsYSBjbGFzZSBWZWxvY2lkYWQuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIG5vbWJyZSBkZWwgc2VndW5kb1Npc3RlbWEuXG4gKi9cbiAgZ2V0U2VndW5kb1Npc3RlbWEoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VndW5kb1Npc3RlbWE7XG4gIH1cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gaGFjZSBsYSBjb252ZXJzacOzbiBlbnRyZSBkb3Mgc2lzdGVtYXMgZGUgdW5pZGFkZXMgZGlmZXJlbnRlc1xuICogQHBhcmFtIHZhbG9yIEVsIHZhbG9yIHF1ZSB0aWVuZSBlbCBzaXN0ZW1hIDEuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIHZhbG9yIHF1ZSB0aWVuZSBlbCBzaXN0ZW1hIDIuXG4gKi9cbiAgY29udmVyc29yKHZhbG9yOiBudW1iZXIpOiBudW1iZXIge1xuXG4gICAgbGV0IHJlc3VsdGFkbzogbnVtYmVyID0gMDtcblxuICAgIGlmICh0aGlzLmdldFByaW1lclNpc3RlbWEoKSA9PT0gXCJraWxvbWV0cm9zIHBvciBob3JhXCIpIHtcbiAgICAgIGlmICh0aGlzLmdldFNlZ3VuZG9TaXN0ZW1hKCkgPT09IFwibWlsbGFzIHBvciBob3JhXCIpXG4gICAgICAgIHJlc3VsdGFkbyA9IHZhbG9yICogMC42MjEzNzE7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoaXMuZ2V0UHJpbWVyU2lzdGVtYSgpID09PSBcIm1pbGxhcyBwb3IgaG9yYVwiKSB7XG4gICAgICBpZiAodGhpcy5nZXRTZWd1bmRvU2lzdGVtYSgpID09PSBcImtpbG9tZXRyb3MgcG9yIGhvcmFcIilcbiAgICAgICAgcmVzdWx0YWRvID0gdmFsb3IgKiAxLjYwOTM0O1xuICAgIH1cbiAgICBlbHNlXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb3Mgc2lzdGVtYXMgbm8gc29uIHbDoWxpZG9zLlwiKTtcbiAgICByZXR1cm4gcmVzdWx0YWRvO1xuICB9XG59XG5cbmNvbnN0IHZlbDEgPSBuZXcgVmVsb2NpZGFkKFwia2lsb21ldHJvcyBwb3IgaG9yYVwiLCBcIm1pbGxhcyBwb3IgaG9yYVwiKTtcbmNvbnNvbGUubG9nKFwiXFxuMjAga2lsb21ldHJvcyBwb3IgaG9yYSBzb24gXCIgKyB2ZWwxLmNvbnZlcnNvcigyMCkgKyBcIiBtaWxsYXMgcG9yIGhvcmEuXCIpO1xuXG5jb25zdCB2ZWwyID0gbmV3IFZlbG9jaWRhZChcIm1pbGxhcyBwb3IgaG9yYVwiLCBcImtpbG9tZXRyb3MgcG9yIGhvcmFcIik7XG5jb25zb2xlLmxvZyhcIjIwIG1pbGxhcyBwb3IgaG9yYSBzb24gXCIgKyB2ZWwyLmNvbnZlcnNvcigyMCkgKyBcIiBraWxvbWV0cm9zIHBvciBob3JhLlxcblwiKTsiXX0=
{"version":3,"file":"/home/usuario/dsi/practica6/src/ejercicio-2/masa.ts","sources":["/home/usuario/dsi/practica6/src/ejercicio-2/masa.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,IAAI;IACjB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;;OAIG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;;OAIG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,MAAM,EAAE;YACtC,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,OAAO;gBACtC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;SAC5B;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,OAAO,EAAE;YAC5C,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,MAAM;gBACrC,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC;SAC7B;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA/CD,oBA+CC;AAED,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;AAE7D,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACxC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC","sourcesContent":["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Masa.__\n */\nexport class Masa implements isConvertible<number> {\n/**\n * Constructor de la clase Masa.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este método se encarga de dar acceso al valor del atributo primerSistema \n * aunque se acceda desde fuera de la clase Masa.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este método se encarga de dar acceso al valor del atributo segundoSistema \n * aunque se acceda desde fuera de la clase Masa.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este método hace la conversión entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"Kilo\") {\n      if (this.getSegundoSistema() === \"Gramo\")\n        resultado = valor * 1000;\n    }\n    else if (this.getPrimerSistema() === \"Gramo\") {\n      if (this.getSegundoSistema() === \"Kilo\")\n        resultado = valor * 0.001;\n    }\n    else\n      throw new Error(\"Los sistemas no son válidos.\");\n    return resultado;\n  }\n}\n\nconst masa1 = new Masa(\"Kilo\", \"Gramo\");\nconsole.log(\"5 kilo son \" + masa1.conversor(5) + \" gramos.\");\n\nconst masa2 = new Masa(\"Gramo\", \"Kilo\");\nconsole.log(\"5000 gramos son \" + masa2.conversor(5000) + \" kilos.\");"]}
{"version":3,"file":"/home/usuario/dsi/practica6/src/ejercicio-2/volumen.ts","sources":["/home/usuario/dsi/practica6/src/ejercicio-2/volumen.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,OAAO;IACpB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;;OAIG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;;OAIG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,OAAO,EAAE;YACvC,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,OAAO;gBACtC,SAAS,GAAG,KAAK,GAAG,QAAQ,CAAC;SAChC;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,OAAO,EAAE;YAC5C,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,OAAO;gBACtC,SAAS,GAAG,KAAK,GAAG,QAAQ,CAAC;SAChC;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA/CD,0BA+CC;AAED,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,CAAC;AAE9E,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC3C,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC","sourcesContent":["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Volumen.__\n */\nexport class Volumen implements isConvertible<number> {\n/**\n * Constructor de la clase Volumen.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este método se encarga de dar acceso al valor del atributo primerSistema \n * aunque se acceda desde fuera de la clase Volumen.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este método se encarga de dar acceso al valor del atributo segundoSistema \n * aunque se acceda desde fuera de la clase Volumen.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este método hace la conversión entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"Litro\") {\n      if (this.getSegundoSistema() === \"Galon\")\n        resultado = valor * 0.219969;\n    }\n    else if (this.getPrimerSistema() === \"Galon\") {\n      if (this.getSegundoSistema() === \"Litro\")\n        resultado = valor / 0.219969;\n    }\n    else\n      throw new Error(\"Los sistemas no son válidos.\");\n    return resultado;\n  }\n}\n\nconst vol1 = new Volumen(\"Litro\", \"Galon\");\nconsole.log(\"\\n50 litros son \" + vol1.conversor(50) + \" galones imperiales.\");\n\nconst vol2 = new Volumen(\"Galon\", \"Litro\");\nconsole.log(\"5 galones imperiales son \" + vol2.conversor(5) + \" litros.\\n\");"]}
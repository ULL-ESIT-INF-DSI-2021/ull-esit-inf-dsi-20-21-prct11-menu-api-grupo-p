"use strict";function cov_25686y0tef(){var path="/home/usuario/dsi/practica7/src/menu.ts";var hash="0b2c522c9432f0bc3490a4f4319325177b9362a5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/dsi/practica7/src/menu.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:22}},"2":{start:{line:9,column:8},end:{line:9,column:37}},"3":{start:{line:10,column:8},end:{line:10,column:39}},"4":{start:{line:18,column:8},end:{line:18,column:24}},"5":{start:{line:19,column:8},end:{line:19,column:30}},"6":{start:{line:20,column:8},end:{line:20,column:43}},"7":{start:{line:21,column:8},end:{line:23,column:11}},"8":{start:{line:22,column:12},end:{line:22,column:43}},"9":{start:{line:24,column:29},end:{line:24,column:30}},"10":{start:{line:25,column:28},end:{line:25,column:29}},"11":{start:{line:26,column:28},end:{line:26,column:29}},"12":{start:{line:27,column:27},end:{line:27,column:28}},"13":{start:{line:29,column:8},end:{line:43,column:11}},"14":{start:{line:30,column:12},end:{line:30,column:52}},"15":{start:{line:31,column:12},end:{line:42,column:13}},"16":{start:{line:32,column:16},end:{line:32,column:35}},"17":{start:{line:34,column:17},end:{line:42,column:13}},"18":{start:{line:35,column:16},end:{line:35,column:34}},"19":{start:{line:37,column:17},end:{line:42,column:13}},"20":{start:{line:38,column:16},end:{line:38,column:34}},"21":{start:{line:40,column:17},end:{line:42,column:13}},"22":{start:{line:41,column:16},end:{line:41,column:33}},"23":{start:{line:44,column:23},end:{line:44,column:84}},"24":{start:{line:45,column:8},end:{line:47,column:9}},"25":{start:{line:46,column:12},end:{line:46,column:89}},"26":{start:{line:54,column:8},end:{line:54,column:31}},"27":{start:{line:61,column:8},end:{line:61,column:32}},"28":{start:{line:68,column:37},end:{line:68,column:83}},"29":{start:{line:69,column:8},end:{line:73,column:11}},"30":{start:{line:70,column:12},end:{line:70,column:100}},"31":{start:{line:71,column:12},end:{line:71,column:92}},"32":{start:{line:72,column:12},end:{line:72,column:88}},"33":{start:{line:74,column:8},end:{line:74,column:38}},"34":{start:{line:83,column:35},end:{line:83,column:37}},"35":{start:{line:84,column:26},end:{line:84,column:28}},"36":{start:{line:86,column:8},end:{line:93,column:11}},"37":{start:{line:87,column:12},end:{line:91,column:15}},"38":{start:{line:88,column:16},end:{line:88,column:70}},"39":{start:{line:94,column:27},end:{line:94,column:103}},"40":{start:{line:94,column:65},end:{line:94,column:102}},"41":{start:{line:95,column:8},end:{line:95,column:26}},"42":{start:{line:102,column:26},end:{line:102,column:27}},"43":{start:{line:103,column:8},end:{line:105,column:11}},"44":{start:{line:104,column:12},end:{line:104,column:47}},"45":{start:{line:106,column:8},end:{line:106,column:27}},"46":{start:{line:109,column:0},end:{line:109,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:57},end:{line:48,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:28},end:{line:21,column:29}},loc:{start:{line:21,column:41},end:{line:23,column:9}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:33},end:{line:29,column:34}},loc:{start:{line:29,column:47},end:{line:43,column:9}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:53,column:4},end:{line:53,column:5}},loc:{start:{line:53,column:20},end:{line:55,column:5}},line:53},"4":{name:"(anonymous_4)",decl:{start:{line:60,column:4},end:{line:60,column:5}},loc:{start:{line:60,column:16},end:{line:62,column:5}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:67,column:4},end:{line:67,column:5}},loc:{start:{line:67,column:32},end:{line:75,column:5}},line:67},"6":{name:"(anonymous_6)",decl:{start:{line:69,column:33},end:{line:69,column:34}},loc:{start:{line:69,column:47},end:{line:73,column:9}},line:69},"7":{name:"(anonymous_7)",decl:{start:{line:82,column:4},end:{line:82,column:5}},loc:{start:{line:82,column:25},end:{line:96,column:5}},line:82},"8":{name:"(anonymous_8)",decl:{start:{line:86,column:33},end:{line:86,column:34}},loc:{start:{line:86,column:48},end:{line:93,column:9}},line:86},"9":{name:"(anonymous_9)",decl:{start:{line:87,column:45},end:{line:87,column:46}},loc:{start:{line:87,column:63},end:{line:91,column:13}},line:87},"10":{name:"(anonymous_10)",decl:{start:{line:94,column:55},end:{line:94,column:56}},loc:{start:{line:94,column:65},end:{line:94,column:102}},line:94},"11":{name:"(anonymous_11)",decl:{start:{line:101,column:4},end:{line:101,column:5}},loc:{start:{line:101,column:20},end:{line:107,column:5}},line:101},"12":{name:"(anonymous_12)",decl:{start:{line:103,column:33},end:{line:103,column:34}},loc:{start:{line:103,column:46},end:{line:105,column:9}},line:103}},branchMap:{"0":{loc:{start:{line:31,column:12},end:{line:42,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:42,column:13}},{start:{line:31,column:12},end:{line:42,column:13}}],line:31},"1":{loc:{start:{line:34,column:17},end:{line:42,column:13}},type:"if",locations:[{start:{line:34,column:17},end:{line:42,column:13}},{start:{line:34,column:17},end:{line:42,column:13}}],line:34},"2":{loc:{start:{line:37,column:17},end:{line:42,column:13}},type:"if",locations:[{start:{line:37,column:17},end:{line:42,column:13}},{start:{line:37,column:17},end:{line:42,column:13}}],line:37},"3":{loc:{start:{line:40,column:17},end:{line:42,column:13}},type:"if",locations:[{start:{line:40,column:17},end:{line:42,column:13}},{start:{line:40,column:17},end:{line:42,column:13}}],line:40},"4":{loc:{start:{line:45,column:8},end:{line:47,column:9}},type:"if",locations:[{start:{line:45,column:8},end:{line:47,column:9}},{start:{line:45,column:8},end:{line:47,column:9}}],line:45}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/dsi/practica7/src/menu.ts",sources:["/home/usuario/dsi/practica7/src/menu.ts"],names:[],mappings:";;;AAMA;;GAEG;AACH,MAAa,IAAI;IAUf,YAAoB,UAAkB,EAAU,WAAkB,EAAE,GAAG,WAAoB;QAAvE,eAAU,GAAV,UAAU,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAO;QATlE;;;;;;WAMG;QACK,WAAM,GAAW,CAAC,CAAC;QACnB,gBAAW,GAAY,EAAE,CAAC;QAEhC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,cAAc,GAAW,CAAC,CAAC;QAC/B,IAAI,aAAa,GAAW,CAAC,CAAC;QAC9B,IAAI,aAAa,GAAW,CAAC,CAAC;QAC9B,IAAI,YAAY,GAAW,CAAC,CAAC;QAC7B,IAAI,aAAwB,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpC,aAAa,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;YACxC,IAAI,aAAa,KAAK,UAAU,EAAE;gBAChC,cAAc,GAAG,CAAC,CAAC;aACpB;iBAAM,IAAI,aAAa,KAAK,SAAS,EAAE;gBACtC,aAAa,GAAG,CAAC,CAAC;aACnB;iBAAM,IAAI,aAAa,KAAK,SAAS,EAAE;gBACtC,aAAa,GAAG,CAAC,CAAC;aACnB;iBAAM,IAAI,aAAa,KAAK,QAAQ,EAAE;gBACrC,YAAY,GAAG,CAAC,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,cAAc,GAAG,aAAa,GAAG,aAAa,GAAG,YAAY,CAAC;QAC7E,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;SAC9E;IACH,CAAC;IAED;;;OAGG;IACH,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,yBAAyB;QACvB,IAAI,sBAAsB,GAAoB,EAAC,aAAa,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;QAC3F,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpC,sBAAsB,CAAC,aAAa,IAAI,QAAQ,CAAC,sBAAsB,EAAE,CAAC,aAAa,CAAC;YACxF,sBAAsB,CAAC,SAAS,IAAI,QAAQ,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC;YAChF,sBAAsB,CAAC,OAAO,IAAI,QAAQ,CAAC,sBAAsB,EAAE,CAAC,OAAO,CAAC;QAC9E,CAAC,CAAC,CAAC;QACH,OAAO,sBAAsB,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,kBAAkB;QAChB,IAAI,oBAAoB,GAAY,EAAE,CAAC;QACvC,IAAI,WAAW,GAAyB,EAAE,CAAC;QAC3C,sBAAsB;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YACrC,SAAS,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;gBAChD,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACtD,sCAAsC;gBACtC,gFAAgF;YAClF,CAAC,CAAC,CAAC;YAAA,CAAC;QACN,CAAC,CAAC,CAAC;QACH,MAAM,UAAU,GAAY,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACzG,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,aAAa;QACX,IAAI,WAAW,GAAW,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACnC,WAAW,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;AArGD,oBAqGC",sourcesContent:["import { Alimento } from \"./alimento\";\nimport { Macronutrientes } from \"./alimento\"\nimport { Grupo } from \"./alimento\";\nimport { Plato } from \"./plato\";\nimport { Categoria } from \"./plato\";\n\n/*\n * Esta es la clase Menu.\n */\nexport class Menu {\n  /**\n   * Constructor de la clase Menu. Comprueba que existan al menos 3 platos de 3 categor\xEDas \n   * distintas (Entrante, Primero, Segundo y Postre) en cada Men\xFA. Si no los hay, devuelve un error.\n   * @param nombreMenu Nombre del plato en cuesti\xF3n.\n   * @param primerPlato Primer plato del men\xFA\n   * @param demasPlatos Array donde se almacenan el resto de los platos del men\xFA.\n   */\n  private precio: number = 0;\n  private arrayPlatos: Plato[] = [];\n  constructor(private nombreMenu: string, private primerPlato: Plato, ...demasPlatos: Plato[]) {\n    this.arrayPlatos.push(primerPlato);\n    demasPlatos.forEach((element) => {\n      this.arrayPlatos.push(element);\n    });\n\n    let existeEntrante: number = 0;\n    let existePrimero: number = 0;\n    let existeSegundo: number = 0;\n    let existePostre: number = 0;\n    let grupoElemento: Categoria;\n    this.arrayPlatos.forEach((elemento) => {\n      grupoElemento = elemento.getCategoria();\n      if (grupoElemento === 'ENTRANTE') {\n        existeEntrante = 1;\n      } else if (grupoElemento === 'PRIMERO') {\n        existePrimero = 1;\n      } else if (grupoElemento === 'SEGUNDO') {\n        existeSegundo = 1;\n      } else if (grupoElemento === 'POSTRE') {\n        existePostre = 1;\n      }\n    });\n    const counts = existeEntrante + existePrimero + existeSegundo + existePostre;\n    if (counts < 3) {\n      throw new Error(\"Los men\xFAs deben tener 3 categor\xEDas de platos como m\xEDnimo.\");\n    }\n  }\n\n  /**\n   * Obtiene el nombre del men\xFA.\n   * @returns Nombre del men\xFA.\n   */\n  getNombreMenu() {\n    return this.nombreMenu;\n  }\n\n  /**\n   * Obtiene los platos que componen el men\xFA.\n   * @returns Listado de los platos del men\xFA.\n   */\n  getPlatos(){\n    return this.arrayPlatos;\n  }\n\n  /**\n   * Obtiene la composici\xF3n nutricional del men\xFA, obten\xEDendola plato por plato.\n   * @returns Cantidad total de carbohidratos, prote\xEDnas y l\xEDpidos del men\xFA.\n   */\n  getComposicionNutricional() {\n    let composicionNutricional: Macronutrientes = {carbohidratos: 0, proteinas: 0, lipidos: 0};\n    this.arrayPlatos.forEach((elemento) => {\n      composicionNutricional.carbohidratos += elemento.calculoMacronutrientes().carbohidratos;\n      composicionNutricional.proteinas += elemento.calculoMacronutrientes().proteinas;\n      composicionNutricional.lipidos += elemento.calculoMacronutrientes().lipidos;\n    });\n    return composicionNutricional;\n  }\n  \n  /**\n   * Obtiene los grupos de alimentos que componen el men\xFA. Almacena todos los grupos de \n   * todos los alimentos de todos los platos y al final filtrar para tener una copia de\n   * cada. Este listado final de grupos \xFAnicos es lo que devuelve.\n   * @returns Listado de grupos de alimentos (\xFAnicos) de todo el men\xFA.\n   */\n  getGruposAlimentos(): Grupo[] {\n    let arrayGruposAlimentos: Grupo[] = [];\n    let platosGrupo: [Alimento, number][] = [];\n    //let valorGrupo: any;\n    this.arrayPlatos.forEach((cadaPlato) => {\n      cadaPlato.getAlimentos().forEach((cadaAlimento) => {\n        arrayGruposAlimentos.push(cadaAlimento[0].getGrupo());\n        //valorGrupo = alimento[0].getGrupo();\n        //arrayGruposAlimentos[valorGrupo] = 1 + (arrayGruposAlimentos[valorGrupo] || 0)\n      });;\n    });\n    const arrayFinal: Grupo[] = arrayGruposAlimentos.filter((n, i) => arrayGruposAlimentos.indexOf(n) === i);\n    return arrayFinal;\n  }\n  \n  /**\n   * Obtiene el precio del men\xFA sumando los precios de sus platos.\n   * @returns Precio (en euros) del men\xFA.\n   */\n  getPrecioMenu(): number {\n    let precioTotal: number = 0;\n    this.arrayPlatos.forEach((element) => {\n      precioTotal += element.getPrecio();\n    });\n    return precioTotal;\n  }\n}"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0b2c522c9432f0bc3490a4f4319325177b9362a5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_25686y0tef=function(){return actualCoverage;};}return actualCoverage;}cov_25686y0tef();cov_25686y0tef().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_25686y0tef().s[1]++;exports.Menu=void 0;/*
 * Esta es la clase Menu.
 */class Menu{constructor(nombreMenu,primerPlato,...demasPlatos){cov_25686y0tef().f[0]++;cov_25686y0tef().s[2]++;this.nombreMenu=nombreMenu;cov_25686y0tef().s[3]++;this.primerPlato=primerPlato;/**
         * Constructor de la clase Menu. Comprueba que existan al menos 3 platos de 3 categorías
         * distintas (Entrante, Primero, Segundo y Postre) en cada Menú. Si no los hay, devuelve un error.
         * @param nombreMenu Nombre del plato en cuestión.
         * @param primerPlato Primer plato del menú
         * @param demasPlatos Array donde se almacenan el resto de los platos del menú.
         */cov_25686y0tef().s[4]++;this.precio=0;cov_25686y0tef().s[5]++;this.arrayPlatos=[];cov_25686y0tef().s[6]++;this.arrayPlatos.push(primerPlato);cov_25686y0tef().s[7]++;demasPlatos.forEach(element=>{cov_25686y0tef().f[1]++;cov_25686y0tef().s[8]++;this.arrayPlatos.push(element);});let existeEntrante=(cov_25686y0tef().s[9]++,0);let existePrimero=(cov_25686y0tef().s[10]++,0);let existeSegundo=(cov_25686y0tef().s[11]++,0);let existePostre=(cov_25686y0tef().s[12]++,0);let grupoElemento;cov_25686y0tef().s[13]++;this.arrayPlatos.forEach(elemento=>{cov_25686y0tef().f[2]++;cov_25686y0tef().s[14]++;grupoElemento=elemento.getCategoria();cov_25686y0tef().s[15]++;if(grupoElemento==='ENTRANTE'){cov_25686y0tef().b[0][0]++;cov_25686y0tef().s[16]++;existeEntrante=1;}else{cov_25686y0tef().b[0][1]++;cov_25686y0tef().s[17]++;if(grupoElemento==='PRIMERO'){cov_25686y0tef().b[1][0]++;cov_25686y0tef().s[18]++;existePrimero=1;}else{cov_25686y0tef().b[1][1]++;cov_25686y0tef().s[19]++;if(grupoElemento==='SEGUNDO'){cov_25686y0tef().b[2][0]++;cov_25686y0tef().s[20]++;existeSegundo=1;}else{cov_25686y0tef().b[2][1]++;cov_25686y0tef().s[21]++;if(grupoElemento==='POSTRE'){cov_25686y0tef().b[3][0]++;cov_25686y0tef().s[22]++;existePostre=1;}else{cov_25686y0tef().b[3][1]++;}}}}});const counts=(cov_25686y0tef().s[23]++,existeEntrante+existePrimero+existeSegundo+existePostre);cov_25686y0tef().s[24]++;if(counts<3){cov_25686y0tef().b[4][0]++;cov_25686y0tef().s[25]++;throw new Error("Los menús deben tener 3 categorías de platos como mínimo.");}else{cov_25686y0tef().b[4][1]++;}}/**
     * Obtiene el nombre del menú.
     * @returns Nombre del menú.
     */getNombreMenu(){cov_25686y0tef().f[3]++;cov_25686y0tef().s[26]++;return this.nombreMenu;}/**
     * Obtiene los platos que componen el menú.
     * @returns Listado de los platos del menú.
     */getPlatos(){cov_25686y0tef().f[4]++;cov_25686y0tef().s[27]++;return this.arrayPlatos;}/**
     * Obtiene la composición nutricional del menú, obteníendola plato por plato.
     * @returns Cantidad total de carbohidratos, proteínas y lípidos del menú.
     */getComposicionNutricional(){cov_25686y0tef().f[5]++;let composicionNutricional=(cov_25686y0tef().s[28]++,{carbohidratos:0,proteinas:0,lipidos:0});cov_25686y0tef().s[29]++;this.arrayPlatos.forEach(elemento=>{cov_25686y0tef().f[6]++;cov_25686y0tef().s[30]++;composicionNutricional.carbohidratos+=elemento.calculoMacronutrientes().carbohidratos;cov_25686y0tef().s[31]++;composicionNutricional.proteinas+=elemento.calculoMacronutrientes().proteinas;cov_25686y0tef().s[32]++;composicionNutricional.lipidos+=elemento.calculoMacronutrientes().lipidos;});cov_25686y0tef().s[33]++;return composicionNutricional;}/**
     * Obtiene los grupos de alimentos que componen el menú. Almacena todos los grupos de
     * todos los alimentos de todos los platos y al final filtrar para tener una copia de
     * cada. Este listado final de grupos únicos es lo que devuelve.
     * @returns Listado de grupos de alimentos (únicos) de todo el menú.
     */getGruposAlimentos(){cov_25686y0tef().f[7]++;let arrayGruposAlimentos=(cov_25686y0tef().s[34]++,[]);let platosGrupo=(cov_25686y0tef().s[35]++,[]);//let valorGrupo: any;
cov_25686y0tef().s[36]++;this.arrayPlatos.forEach(cadaPlato=>{cov_25686y0tef().f[8]++;cov_25686y0tef().s[37]++;cadaPlato.getAlimentos().forEach(cadaAlimento=>{cov_25686y0tef().f[9]++;cov_25686y0tef().s[38]++;arrayGruposAlimentos.push(cadaAlimento[0].getGrupo());//valorGrupo = alimento[0].getGrupo();
//arrayGruposAlimentos[valorGrupo] = 1 + (arrayGruposAlimentos[valorGrupo] || 0)
});;});const arrayFinal=(cov_25686y0tef().s[39]++,arrayGruposAlimentos.filter((n,i)=>{cov_25686y0tef().f[10]++;cov_25686y0tef().s[40]++;return arrayGruposAlimentos.indexOf(n)===i;}));cov_25686y0tef().s[41]++;return arrayFinal;}/**
     * Obtiene el precio del menú sumando los precios de sus platos.
     * @returns Precio (en euros) del menú.
     */getPrecioMenu(){cov_25686y0tef().f[11]++;let precioTotal=(cov_25686y0tef().s[42]++,0);cov_25686y0tef().s[43]++;this.arrayPlatos.forEach(element=>{cov_25686y0tef().f[12]++;cov_25686y0tef().s[44]++;precioTotal+=element.getPrecio();});cov_25686y0tef().s[45]++;return precioTotal;}}cov_25686y0tef().s[46]++;exports.Menu=Menu;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
"use strict";function cov_1n7jkltcaq(){var path="/home/usuario/dsi/practica6/src/ejercicio-2/longitud.ts";var hash="440a6d3865339db4912fbe42107349e393b1b723";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/dsi/practica6/src/ejercicio-2/longitud.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:26}},"2":{start:{line:14,column:8},end:{line:14,column:43}},"3":{start:{line:15,column:8},end:{line:15,column:45}},"4":{start:{line:23,column:8},end:{line:23,column:34}},"5":{start:{line:31,column:8},end:{line:31,column:35}},"6":{start:{line:39,column:24},end:{line:39,column:25}},"7":{start:{line:40,column:8},end:{line:49,column:60}},"8":{start:{line:41,column:12},end:{line:42,column:48}},"9":{start:{line:42,column:16},end:{line:42,column:48}},"10":{start:{line:44,column:13},end:{line:49,column:60}},"11":{start:{line:45,column:12},end:{line:46,column:45}},"12":{start:{line:46,column:16},end:{line:46,column:45}},"13":{start:{line:49,column:12},end:{line:49,column:60}},"14":{start:{line:50,column:8},end:{line:50,column:25}},"15":{start:{line:53,column:0},end:{line:53,column:28}},"16":{start:{line:54,column:14},end:{line:54,column:46}},"17":{start:{line:55,column:0},end:{line:55,column:69}},"18":{start:{line:56,column:14},end:{line:56,column:46}},"19":{start:{line:57,column:0},end:{line:57,column:63}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:47},end:{line:16,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:22,column:23},end:{line:24,column:5}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:24},end:{line:32,column:5}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:21},end:{line:51,column:5}},line:38}},branchMap:{"0":{loc:{start:{line:40,column:8},end:{line:49,column:60}},type:"if",locations:[{start:{line:40,column:8},end:{line:49,column:60}},{start:{line:40,column:8},end:{line:49,column:60}}],line:40},"1":{loc:{start:{line:41,column:12},end:{line:42,column:48}},type:"if",locations:[{start:{line:41,column:12},end:{line:42,column:48}},{start:{line:41,column:12},end:{line:42,column:48}}],line:41},"2":{loc:{start:{line:44,column:13},end:{line:49,column:60}},type:"if",locations:[{start:{line:44,column:13},end:{line:49,column:60}},{start:{line:44,column:13},end:{line:49,column:60}}],line:44},"3":{loc:{start:{line:45,column:12},end:{line:46,column:45}},type:"if",locations:[{start:{line:45,column:12},end:{line:46,column:45}},{start:{line:45,column:12},end:{line:46,column:45}}],line:45}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/dsi/practica6/src/ejercicio-2/longitud.ts",sources:["/home/usuario/dsi/practica6/src/ejercicio-2/longitud.ts"],names:[],mappings:";;;AAEA;;GAEG;AACH,MAAa,QAAQ;IACrB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;;OAIG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;;OAIG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,QAAQ,EAAE;YACxC,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,QAAQ;gBACvC,SAAS,GAAG,KAAK,GAAG,WAAW,CAAC;SACnC;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,QAAQ,EAAE;YAC7C,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,QAAQ;gBACvC,SAAS,GAAG,KAAK,GAAG,IAAI,EAAC,EAAE,CAAC;SAC/B;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA/CD,4BA+CC;AAED,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC/C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;AAErE,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC/C,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC",sourcesContent:["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Longitud.__\n */\nexport class Longitud implements isConvertible<number> {\n/**\n * Constructor de la clase Longitud.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este m\xE9todo se encarga de dar acceso al valor del atributo primerSistema \n * aunque se acceda desde fuera de la clase Longitud.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este m\xE9todo se encarga de dar acceso al valor del atributo segundoSistema \n * aunque se acceda desde fuera de la clase Longitud.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este m\xE9todo hace la conversi\xF3n entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"Metros\") {\n      if (this.getSegundoSistema() === \"Millas\")\n        resultado = valor * 0.000621371;\n    }\n    else if (this.getPrimerSistema() === \"Millas\") {\n      if (this.getSegundoSistema() === \"Metros\")\n        resultado = valor * 1609,34;\n    }\n    else\n      throw new Error(\"Los sistemas no son v\xE1lidos.\");\n    return resultado;\n  }\n}\n\nconst long1 = new Longitud(\"Metros\", \"Millas\");\nconsole.log(\"1000 metros son \" + long1.conversor(1000) + \" millas.\");\n\nconst long2 = new Longitud(\"Millas\", \"Metros\");\nconsole.log(\"5 millas son \" + long2.conversor(5) + \" metros.\");"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"440a6d3865339db4912fbe42107349e393b1b723"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1n7jkltcaq=function(){return actualCoverage;};}return actualCoverage;}cov_1n7jkltcaq();cov_1n7jkltcaq().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1n7jkltcaq().s[1]++;exports.Longitud=void 0;/**
 * __Esta es la clase Longitud.__
 */class Longitud{/**
     * Constructor de la clase Longitud.
     * @param primerSistema Nombre del primer sistema.
     * @param segundoSistema Nombre del segundo sistema.
     */constructor(primerSistema,segundoSistema){cov_1n7jkltcaq().f[0]++;cov_1n7jkltcaq().s[2]++;this.primerSistema=primerSistema;cov_1n7jkltcaq().s[3]++;this.segundoSistema=segundoSistema;}/**
     * Este método se encarga de dar acceso al valor del atributo primerSistema
     * aunque se acceda desde fuera de la clase Longitud.
     * @return Devuelve el nombre del primerSistema.
     */getPrimerSistema(){cov_1n7jkltcaq().f[1]++;cov_1n7jkltcaq().s[4]++;return this.primerSistema;}/**
     * Este método se encarga de dar acceso al valor del atributo segundoSistema
     * aunque se acceda desde fuera de la clase Longitud.
     * @return Devuelve el nombre del segundoSistema.
     */getSegundoSistema(){cov_1n7jkltcaq().f[2]++;cov_1n7jkltcaq().s[5]++;return this.segundoSistema;}/**
     * Este método hace la conversión entre dos sistemas de unidades diferentes
     * @param valor El valor que tiene el sistema 1.
     * @return Devuelve el valor que tiene el sistema 2.
     */conversor(valor){cov_1n7jkltcaq().f[3]++;let resultado=(cov_1n7jkltcaq().s[6]++,0);cov_1n7jkltcaq().s[7]++;if(this.getPrimerSistema()==="Metros"){cov_1n7jkltcaq().b[0][0]++;cov_1n7jkltcaq().s[8]++;if(this.getSegundoSistema()==="Millas"){cov_1n7jkltcaq().b[1][0]++;cov_1n7jkltcaq().s[9]++;resultado=valor*0.000621371;}else{cov_1n7jkltcaq().b[1][1]++;}}else{cov_1n7jkltcaq().b[0][1]++;cov_1n7jkltcaq().s[10]++;if(this.getPrimerSistema()==="Millas"){cov_1n7jkltcaq().b[2][0]++;cov_1n7jkltcaq().s[11]++;if(this.getSegundoSistema()==="Metros"){cov_1n7jkltcaq().b[3][0]++;cov_1n7jkltcaq().s[12]++;resultado=valor*1609,34;}else{cov_1n7jkltcaq().b[3][1]++;}}else{cov_1n7jkltcaq().b[2][1]++;cov_1n7jkltcaq().s[13]++;throw new Error("Los sistemas no son válidos.");}}cov_1n7jkltcaq().s[14]++;return resultado;}}cov_1n7jkltcaq().s[15]++;exports.Longitud=Longitud;const long1=(cov_1n7jkltcaq().s[16]++,new Longitud("Metros","Millas"));cov_1n7jkltcaq().s[17]++;console.log("1000 metros son "+long1.conversor(1000)+" millas.");const long2=(cov_1n7jkltcaq().s[18]++,new Longitud("Millas","Metros"));cov_1n7jkltcaq().s[19]++;console.log("5 millas son "+long2.conversor(5)+" metros.");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9kc2kvcHJhY3RpY2E2L3NyYy9lamVyY2ljaW8tMi9sb25naXR1ZC50cyIsInNvdXJjZXMiOlsiL2hvbWUvdXN1YXJpby9kc2kvcHJhY3RpY2E2L3NyYy9lamVyY2ljaW8tMi9sb25naXR1ZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQTs7R0FFRztBQUNILE1BQWEsUUFBUTtJQUNyQjs7OztPQUlHO0lBQ0QsWUFBb0IsYUFBcUIsRUFBVSxjQUFzQjtRQUFyRCxrQkFBYSxHQUFiLGFBQWEsQ0FBUTtRQUFVLG1CQUFjLEdBQWQsY0FBYyxDQUFRO0lBQUcsQ0FBQztJQUUvRTs7OztPQUlHO0lBQ0QsZ0JBQWdCO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFFSDs7OztPQUlHO0lBQ0QsaUJBQWlCO1FBQ2YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFSDs7OztPQUlHO0lBQ0QsU0FBUyxDQUFDLEtBQWE7UUFFckIsSUFBSSxTQUFTLEdBQVcsQ0FBQyxDQUFDO1FBRTFCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFLEtBQUssUUFBUSxFQUFFO1lBQ3hDLElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFLEtBQUssUUFBUTtnQkFDdkMsU0FBUyxHQUFHLEtBQUssR0FBRyxXQUFXLENBQUM7U0FDbkM7YUFDSSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxLQUFLLFFBQVEsRUFBRTtZQUM3QyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxLQUFLLFFBQVE7Z0JBQ3ZDLFNBQVMsR0FBRyxLQUFLLEdBQUcsSUFBSSxFQUFDLEVBQUUsQ0FBQztTQUMvQjs7WUFFQyxNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDbEQsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBL0NELDRCQStDQztBQUVELE1BQU0sS0FBSyxHQUFHLElBQUksUUFBUSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUMvQyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUM7QUFFckUsTUFBTSxLQUFLLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQy9DLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0NvbnZlcnRpYmxlIH0gZnJvbSAnLi9pc0NvbnZlcnRpYmxlJztcblxuLyoqXG4gKiBfX0VzdGEgZXMgbGEgY2xhc2UgTG9uZ2l0dWQuX19cbiAqL1xuZXhwb3J0IGNsYXNzIExvbmdpdHVkIGltcGxlbWVudHMgaXNDb252ZXJ0aWJsZTxudW1iZXI+IHtcbi8qKlxuICogQ29uc3RydWN0b3IgZGUgbGEgY2xhc2UgTG9uZ2l0dWQuXG4gKiBAcGFyYW0gcHJpbWVyU2lzdGVtYSBOb21icmUgZGVsIHByaW1lciBzaXN0ZW1hLlxuICogQHBhcmFtIHNlZ3VuZG9TaXN0ZW1hIE5vbWJyZSBkZWwgc2VndW5kbyBzaXN0ZW1hLlxuICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJpbWVyU2lzdGVtYTogc3RyaW5nLCBwcml2YXRlIHNlZ3VuZG9TaXN0ZW1hOiBzdHJpbmcpIHt9XG5cbi8qKlxuICogRXN0ZSBtw6l0b2RvIHNlIGVuY2FyZ2EgZGUgZGFyIGFjY2VzbyBhbCB2YWxvciBkZWwgYXRyaWJ1dG8gcHJpbWVyU2lzdGVtYSBcbiAqIGF1bnF1ZSBzZSBhY2NlZGEgZGVzZGUgZnVlcmEgZGUgbGEgY2xhc2UgTG9uZ2l0dWQuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIG5vbWJyZSBkZWwgcHJpbWVyU2lzdGVtYS5cbiAqL1xuICBnZXRQcmltZXJTaXN0ZW1hKCkge1xuICAgIHJldHVybiB0aGlzLnByaW1lclNpc3RlbWE7XG4gIH1cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gc2UgZW5jYXJnYSBkZSBkYXIgYWNjZXNvIGFsIHZhbG9yIGRlbCBhdHJpYnV0byBzZWd1bmRvU2lzdGVtYSBcbiAqIGF1bnF1ZSBzZSBhY2NlZGEgZGVzZGUgZnVlcmEgZGUgbGEgY2xhc2UgTG9uZ2l0dWQuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIG5vbWJyZSBkZWwgc2VndW5kb1Npc3RlbWEuXG4gKi9cbiAgZ2V0U2VndW5kb1Npc3RlbWEoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VndW5kb1Npc3RlbWE7XG4gIH1cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gaGFjZSBsYSBjb252ZXJzacOzbiBlbnRyZSBkb3Mgc2lzdGVtYXMgZGUgdW5pZGFkZXMgZGlmZXJlbnRlc1xuICogQHBhcmFtIHZhbG9yIEVsIHZhbG9yIHF1ZSB0aWVuZSBlbCBzaXN0ZW1hIDEuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIHZhbG9yIHF1ZSB0aWVuZSBlbCBzaXN0ZW1hIDIuXG4gKi9cbiAgY29udmVyc29yKHZhbG9yOiBudW1iZXIpOiBudW1iZXIge1xuXG4gICAgbGV0IHJlc3VsdGFkbzogbnVtYmVyID0gMDtcblxuICAgIGlmICh0aGlzLmdldFByaW1lclNpc3RlbWEoKSA9PT0gXCJNZXRyb3NcIikge1xuICAgICAgaWYgKHRoaXMuZ2V0U2VndW5kb1Npc3RlbWEoKSA9PT0gXCJNaWxsYXNcIilcbiAgICAgICAgcmVzdWx0YWRvID0gdmFsb3IgKiAwLjAwMDYyMTM3MTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5nZXRQcmltZXJTaXN0ZW1hKCkgPT09IFwiTWlsbGFzXCIpIHtcbiAgICAgIGlmICh0aGlzLmdldFNlZ3VuZG9TaXN0ZW1hKCkgPT09IFwiTWV0cm9zXCIpXG4gICAgICAgIHJlc3VsdGFkbyA9IHZhbG9yICogMTYwOSwzNDtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9zIHNpc3RlbWFzIG5vIHNvbiB2w6FsaWRvcy5cIik7XG4gICAgcmV0dXJuIHJlc3VsdGFkbztcbiAgfVxufVxuXG5jb25zdCBsb25nMSA9IG5ldyBMb25naXR1ZChcIk1ldHJvc1wiLCBcIk1pbGxhc1wiKTtcbmNvbnNvbGUubG9nKFwiMTAwMCBtZXRyb3Mgc29uIFwiICsgbG9uZzEuY29udmVyc29yKDEwMDApICsgXCIgbWlsbGFzLlwiKTtcblxuY29uc3QgbG9uZzIgPSBuZXcgTG9uZ2l0dWQoXCJNaWxsYXNcIiwgXCJNZXRyb3NcIik7XG5jb25zb2xlLmxvZyhcIjUgbWlsbGFzIHNvbiBcIiArIGxvbmcyLmNvbnZlcnNvcig1KSArIFwiIG1ldHJvcy5cIik7Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vZHNpL3ByYWN0aWNhNi9zcmMvZWplcmNpY2lvLTIvbG9uZ2l0dWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6ImlyTUFXK0U7NE5BVC9FOztBQUVHLEdBQ0gsS0FBYSxDQUFBLFFBQVEsQ0FDckI7Ozs7QUFJRyxPQUNELFdBQUEsQ0FBb0IsYUFBcEIsQ0FBbUQsY0FBbkQsQ0FBeUUsaURBQXJELEtBQUEsYUFBQSxDQUFBLGFBQUEsQ0FBcUQsd0JBQXRCLEtBQUEsY0FBQSxDQUFBLGNBQUEsQ0FBMEIsQ0FFL0U7Ozs7QUFJRyxPQUNELGdCQUFnQixFQUFBLGlEQUNkLE1BQU8sTUFBSyxhQUFaLENBQ0QsQ0FFSDs7OztBQUlHLE9BQ0QsaUJBQWlCLEVBQUEsaURBQ2YsTUFBTyxNQUFLLGNBQVosQ0FDRCxDQUVIOzs7O0FBSUcsT0FDRCxTQUFTLENBQUMsS0FBRCxDQUFjLHlCQUVyQixHQUFJLENBQUEsU0FBUywwQkFBVyxDQUFYLENBQWIsQ0FGcUIsd0JBSXJCLEdBQUksS0FBSyxnQkFBTCxLQUE0QixRQUFoQyxDQUEwQyxvREFDeEMsR0FBSSxLQUFLLGlCQUFMLEtBQTZCLFFBQWpDLENBQ0Usb0RBQUEsU0FBUyxDQUFHLEtBQUssQ0FBRyxXQUFwQixDQUFnQyxDQURsQyxpQ0FFRCxDQUhELElBSUssd0RBQUksS0FBSyxnQkFBTCxLQUE0QixRQUFoQyxDQUEwQyxxREFDN0MsR0FBSSxLQUFLLGlCQUFMLEtBQTZCLFFBQWpDLENBQ0UscURBQUEsU0FBUyxDQUFHLEtBQUssQ0FBRyxJQUFwQixDQUF5QixFQUF6QixDQUE0QixDQUQ5QixpQ0FFRCxDQUhJLElBS0gsMERBQU0sSUFBSSxDQUFBLEtBQUosQ0FBVSw4QkFBVixDQUFOLENBQWdELEVBYjdCLHlCQWNyQixNQUFPLENBQUEsU0FBUCxDQUNELENBOUNrQixDLHlCQUFyQixPQUFBLENBQUEsUUFBQSxDQUFBLFFBQUEsQ0FpREEsS0FBTSxDQUFBLEtBQUssMkJBQUcsR0FBSSxDQUFBLFFBQUosQ0FBYSxRQUFiLENBQXVCLFFBQXZCLENBQUgsQ0FBWCxDLHlCQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksbUJBQXFCLEtBQUssQ0FBQyxTQUFOLENBQWdCLElBQWhCLENBQXJCLENBQTZDLFVBQXpELEVBRUEsS0FBTSxDQUFBLEtBQUssMkJBQUcsR0FBSSxDQUFBLFFBQUosQ0FBYSxRQUFiLENBQXVCLFFBQXZCLENBQUgsQ0FBWCxDLHlCQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksZ0JBQWtCLEtBQUssQ0FBQyxTQUFOLENBQWdCLENBQWhCLENBQWxCLENBQXVDLFVBQW5ELEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0NvbnZlcnRpYmxlIH0gZnJvbSAnLi9pc0NvbnZlcnRpYmxlJztcblxuLyoqXG4gKiBfX0VzdGEgZXMgbGEgY2xhc2UgTG9uZ2l0dWQuX19cbiAqL1xuZXhwb3J0IGNsYXNzIExvbmdpdHVkIGltcGxlbWVudHMgaXNDb252ZXJ0aWJsZTxudW1iZXI+IHtcbi8qKlxuICogQ29uc3RydWN0b3IgZGUgbGEgY2xhc2UgTG9uZ2l0dWQuXG4gKiBAcGFyYW0gcHJpbWVyU2lzdGVtYSBOb21icmUgZGVsIHByaW1lciBzaXN0ZW1hLlxuICogQHBhcmFtIHNlZ3VuZG9TaXN0ZW1hIE5vbWJyZSBkZWwgc2VndW5kbyBzaXN0ZW1hLlxuICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJpbWVyU2lzdGVtYTogc3RyaW5nLCBwcml2YXRlIHNlZ3VuZG9TaXN0ZW1hOiBzdHJpbmcpIHt9XG5cbi8qKlxuICogRXN0ZSBtw6l0b2RvIHNlIGVuY2FyZ2EgZGUgZGFyIGFjY2VzbyBhbCB2YWxvciBkZWwgYXRyaWJ1dG8gcHJpbWVyU2lzdGVtYSBcbiAqIGF1bnF1ZSBzZSBhY2NlZGEgZGVzZGUgZnVlcmEgZGUgbGEgY2xhc2UgTG9uZ2l0dWQuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIG5vbWJyZSBkZWwgcHJpbWVyU2lzdGVtYS5cbiAqL1xuICBnZXRQcmltZXJTaXN0ZW1hKCkge1xuICAgIHJldHVybiB0aGlzLnByaW1lclNpc3RlbWE7XG4gIH1cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gc2UgZW5jYXJnYSBkZSBkYXIgYWNjZXNvIGFsIHZhbG9yIGRlbCBhdHJpYnV0byBzZWd1bmRvU2lzdGVtYSBcbiAqIGF1bnF1ZSBzZSBhY2NlZGEgZGVzZGUgZnVlcmEgZGUgbGEgY2xhc2UgTG9uZ2l0dWQuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIG5vbWJyZSBkZWwgc2VndW5kb1Npc3RlbWEuXG4gKi9cbiAgZ2V0U2VndW5kb1Npc3RlbWEoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VndW5kb1Npc3RlbWE7XG4gIH1cblxuLyoqXG4gKiBFc3RlIG3DqXRvZG8gaGFjZSBsYSBjb252ZXJzacOzbiBlbnRyZSBkb3Mgc2lzdGVtYXMgZGUgdW5pZGFkZXMgZGlmZXJlbnRlc1xuICogQHBhcmFtIHZhbG9yIEVsIHZhbG9yIHF1ZSB0aWVuZSBlbCBzaXN0ZW1hIDEuXG4gKiBAcmV0dXJuIERldnVlbHZlIGVsIHZhbG9yIHF1ZSB0aWVuZSBlbCBzaXN0ZW1hIDIuXG4gKi9cbiAgY29udmVyc29yKHZhbG9yOiBudW1iZXIpOiBudW1iZXIge1xuXG4gICAgbGV0IHJlc3VsdGFkbzogbnVtYmVyID0gMDtcblxuICAgIGlmICh0aGlzLmdldFByaW1lclNpc3RlbWEoKSA9PT0gXCJNZXRyb3NcIikge1xuICAgICAgaWYgKHRoaXMuZ2V0U2VndW5kb1Npc3RlbWEoKSA9PT0gXCJNaWxsYXNcIilcbiAgICAgICAgcmVzdWx0YWRvID0gdmFsb3IgKiAwLjAwMDYyMTM3MTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5nZXRQcmltZXJTaXN0ZW1hKCkgPT09IFwiTWlsbGFzXCIpIHtcbiAgICAgIGlmICh0aGlzLmdldFNlZ3VuZG9TaXN0ZW1hKCkgPT09IFwiTWV0cm9zXCIpXG4gICAgICAgIHJlc3VsdGFkbyA9IHZhbG9yICogMTYwOSwzNDtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9zIHNpc3RlbWFzIG5vIHNvbiB2w6FsaWRvcy5cIik7XG4gICAgcmV0dXJuIHJlc3VsdGFkbztcbiAgfVxufVxuXG5jb25zdCBsb25nMSA9IG5ldyBMb25naXR1ZChcIk1ldHJvc1wiLCBcIk1pbGxhc1wiKTtcbmNvbnNvbGUubG9nKFwiMTAwMCBtZXRyb3Mgc29uIFwiICsgbG9uZzEuY29udmVyc29yKDEwMDApICsgXCIgbWlsbGFzLlwiKTtcblxuY29uc3QgbG9uZzIgPSBuZXcgTG9uZ2l0dWQoXCJNaWxsYXNcIiwgXCJNZXRyb3NcIik7XG5jb25zb2xlLmxvZyhcIjUgbWlsbGFzIHNvbiBcIiArIGxvbmcyLmNvbnZlcnNvcig1KSArIFwiIG1ldHJvcy5cIik7Il19
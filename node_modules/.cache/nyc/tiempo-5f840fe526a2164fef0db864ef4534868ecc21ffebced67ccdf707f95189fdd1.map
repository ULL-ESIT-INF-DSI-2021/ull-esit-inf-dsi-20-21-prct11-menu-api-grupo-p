{"version":3,"file":"/home/usuario/dsi/practica6/src/ejercicio-2/tiempo.ts","sources":["/home/usuario/dsi/practica6/src/ejercicio-2/tiempo.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IACnB;;;;OAIG;IACD,YAAoB,aAAqB,EAAU,cAAsB;QAArD,kBAAa,GAAb,aAAa,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAQ;IAAG,CAAC;IAE/E;;;;OAIG;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEH;;;;OAIG;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEH;;;;OAIG;IACD,SAAS,CAAC,KAAa;QAErB,IAAI,SAAS,GAAW,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,OAAO,EAAE;YACvC,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,UAAU;gBACzC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;SAC5B;aACI,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,UAAU,EAAE;YAC/C,IAAI,IAAI,CAAC,iBAAiB,EAAE,KAAK,OAAO;gBACtC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;SAC5B;;YAEC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA/CD,wBA+CC;AAED,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAChD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;AAEpE,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAChD,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC","sourcesContent":["import { isConvertible } from './isConvertible';\n\n/**\n * __Esta es la clase Tiempo.__\n */\nexport class Tiempo implements isConvertible<number> {\n/**\n * Constructor de la clase Tiempo.\n * @param primerSistema Nombre del primer sistema.\n * @param segundoSistema Nombre del segundo sistema.\n */\n  constructor(private primerSistema: string, private segundoSistema: string) {}\n\n/**\n * Este método se encarga de dar acceso al valor del atributo primerSistema \n * aunque se acceda desde fuera de la clase Tiempo.\n * @return Devuelve el nombre del primerSistema.\n */\n  getPrimerSistema() {\n    return this.primerSistema;\n  }\n\n/**\n * Este método se encarga de dar acceso al valor del atributo segundoSistema \n * aunque se acceda desde fuera de la clase Tiempo.\n * @return Devuelve el nombre del segundoSistema.\n */\n  getSegundoSistema() {\n    return this.segundoSistema;\n  }\n\n/**\n * Este método hace la conversión entre dos sistemas de unidades diferentes\n * @param valor El valor que tiene el sistema 1.\n * @return Devuelve el valor que tiene el sistema 2.\n */\n  conversor(valor: number): number {\n\n    let resultado: number = 0;\n\n    if (this.getPrimerSistema() === \"Horas\") {\n      if (this.getSegundoSistema() === \"Segundos\")\n        resultado = valor * 3600;\n    }\n    else if (this.getPrimerSistema() === \"Segundos\") {\n      if (this.getSegundoSistema() === \"Horas\")\n        resultado = valor / 3600;\n    }\n    else\n      throw new Error(\"Los sistemas no son válidos.\");\n    return resultado;\n  }\n}\n\nconst tiempo1 = new Tiempo(\"Horas\", \"Segundos\");\nconsole.log(\"\\n3 horas son \" + tiempo1.conversor(3) + \" segundos.\");\n\nconst tiempo2 = new Tiempo(\"Segundos\", \"Horas\");\nconsole.log(\"7200 segundos son \" + tiempo2.conversor(7200) + \" horas.\\n\");"]}